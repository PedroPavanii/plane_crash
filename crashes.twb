<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='crash' inline='true' name='federated.13ahx640xkange1eypzwl087xkpe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='crash' name='textscan.0o3l2lu1srhau61bmhiuv09zaods'>
            <connection class='textscan' directory='C:/Users/pedro/OneDrive/Área de Trabalho/plane_crash' filename='crash.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Aircraft' ordinal='0' />
            <column datatype='string' name='Operator' ordinal='1' />
            <column datatype='string' name='Flight phase' ordinal='2' />
            <column datatype='string' name='Flight type' ordinal='3' />
            <column datatype='string' name='Survivors' ordinal='4' />
            <column datatype='string' name='Crash site' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='integer' name='Total fatalities' ordinal='8' />
            <column datatype='string' name='Crash cause' ordinal='9' />
            <column datatype='integer' name='Year' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Aircraft' ordinal='0' />
            <column datatype='string' name='Operator' ordinal='1' />
            <column datatype='string' name='Flight phase' ordinal='2' />
            <column datatype='string' name='Flight type' ordinal='3' />
            <column datatype='string' name='Survivors' ordinal='4' />
            <column datatype='string' name='Crash site' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='integer' name='Total fatalities' ordinal='8' />
            <column datatype='string' name='Crash cause' ordinal='9' />
            <column datatype='integer' name='Year' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Aircraft</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Operator]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight phase]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Flight phase</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight type]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Flight type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Survivors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Survivors]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Survivors</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash site</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crash site]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Crash site</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total fatalities]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Total fatalities</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash cause</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crash cause]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Crash cause</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_2093329428268326913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_2093329428268965890])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank sum' datatype='integer' name='[Calculation_2093329428268965890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(COUNT([__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Território Britânico do Oceano Índico&quot;' />
          <semantic-value key='&quot;Guam Island&quot;' value='&quot;Territórios Insulares dos Estados Unidos&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Flight type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Charter/Taxi (Non Scheduled Revenue Flight)&quot;' value='Non Scheduled(Taxi) ' />
          <alias key='&quot;Executive/Corporate/Business&quot;' value='Executive' />
          <alias key='&quot;Scheduled Revenue Flight&quot;' value='Charter Flights' />
          <alias key='&quot;Survey / Patrol / Reconnaissance&quot;' value='Patrol Military' />
        </aliases>
      </column>
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='decadas' datatype='integer' name='[Year (compartimento)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
      </column>
      <column caption='Year num' datatype='integer' name='[Year (cópia)_458522763506528258]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Year]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;Saint-Barthélemy&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e13a42'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f26654'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Guam Island&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fa8972'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;Fiji Islands&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#feac9e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fead9f'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb2a5'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;Saint-Barthélemy&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e13a42'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f26654'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Guam Island&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fa8972'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;Fiji Islands&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#feac9e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fead9f'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb2a5'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='crash.csv' id='crash.csv_B79F7D982D2E4BB3894BEB0C102D1182'>
            <properties context=''>
              <relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Aircraft' ordinal='0' />
                  <column datatype='string' name='Operator' ordinal='1' />
                  <column datatype='string' name='Flight phase' ordinal='2' />
                  <column datatype='string' name='Flight type' ordinal='3' />
                  <column datatype='string' name='Survivors' ordinal='4' />
                  <column datatype='string' name='Crash site' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='string' name='Region' ordinal='7' />
                  <column datatype='integer' name='Total fatalities' ordinal='8' />
                  <column datatype='string' name='Crash cause' ordinal='9' />
                  <column datatype='integer' name='Year' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crashes X Aircraft'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Aircraft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft]' derivation='None' name='[none:Aircraft:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total fatalities]' derivation='Sum' name='[sum:Total fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[sum:Total fatalities:qk]' scope='rows' value='Crashes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[sum:Total fatalities:qk]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</cols>
      </table>
      <simple-id uuid='{D48AB24D-F51F-4257-BF58-CBFBD5E6B693}' />
    </worksheet>
    <worksheet name='Crashes X Flight Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8E2A8147-B237-4A88-B253-85EFBAEF233B}' />
    </worksheet>
    <worksheet name='Crashes X Operators'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Crashes X Operators</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' scope='rows' value='Crashes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</cols>
      </table>
      <simple-id uuid='{0E8D6DBC-77B1-4EAA-B263-0AB096262D59}' />
    </worksheet>
    <worksheet name='Crashes X Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Aircraft]' role='dimension' type='nominal' />
            <column caption='Rank' datatype='integer' name='[Calculation_2093329428268326913]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_2093329428268965890])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='rank sum' datatype='integer' name='[Calculation_2093329428268965890]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(COUNT([__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='decadas' datatype='integer' name='[Year (compartimento)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft]' derivation='None' name='[none:Aircraft:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (compartimento)]' derivation='None' name='[none:Year (compartimento):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2093329428268326913]' derivation='User' name='[usr:Calculation_2093329428268326913:qk:23]' pivot='key' type='quantitative'>
              <table-calc level-address='[federated.13ahx640xkange1eypzwl087xkpe].[Aircraft]' level-break='[federated.13ahx640xkange1eypzwl087xkpe].[Aircraft]' ordering-type='Field'>
                <order field='[federated.13ahx640xkange1eypzwl087xkpe].[Year (compartimento)]' />
                <order field='[federated.13ahx640xkange1eypzwl087xkpe].[Aircraft]' />
              </table-calc>
              <table-calc field='[federated.13ahx640xkange1eypzwl087xkpe].[Calculation_2093329428268965890]' ordering-field='[federated.13ahx640xkange1eypzwl087xkpe].[Year (compartimento)]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[usr:Calculation_2093329428268326913:qk:23]' included-values='in-range'>
            <min>1</min>
            <max>146</max>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[usr:Calculation_2093329428268326913:qk:23]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]' value='37' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]</cols>
        <pages>
          <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.13ahx640xkange1eypzwl087xkpe].[Year (compartimento)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{88BF6060-E676-4372-81E1-C9D846CFA418}' />
    </worksheet>
    <worksheet name='Planilha 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Aircraft]' role='dimension' type='nominal' />
            <column datatype='string' name='[Flight type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Charter/Taxi (Non Scheduled Revenue Flight)&quot;' value='Non Scheduled(Taxi) ' />
                <alias key='&quot;Executive/Corporate/Business&quot;' value='Executive' />
                <alias key='&quot;Scheduled Revenue Flight&quot;' value='Charter Flights' />
                <alias key='&quot;Survey / Patrol / Reconnaissance&quot;' value='Patrol Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft]' derivation='None' name='[none:Aircraft:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight type]' derivation='None' name='[none:Flight type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total fatalities]' derivation='None' name='[none:Total fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]' included-values='in-range'>
            <min>520</min>
            <max>520</max>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk] / [federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk])</cols>
      </table>
      <simple-id uuid='{2FE32A78-D97E-4448-8549-4B62005CA797}' />
    </worksheet>
    <worksheet name='Planilha 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AFBE7632-0256-4A56-B115-DD96E5ECD213}' />
    </worksheet>
    <worksheet name='Total Crashes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Accumulated crashes between 1918 and 2022 by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Território Britânico do Oceano Índico&quot;' />
                <semantic-value key='&quot;Guam Island&quot;' value='&quot;Territórios Insulares dos Estados Unidos&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Count' name='[cnt:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' />
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9CABB979-6FB2-4DDF-BE74-2CE6D2467F42}' />
    </worksheet>
    <worksheet name='Total Crashes (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Accumulated crashes between 1918 and 2022 by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Território Britânico do Oceano Índico&quot;' />
                <semantic-value key='&quot;Guam Island&quot;' value='&quot;Territórios Insulares dos Estados Unidos&quot;' />
              </semantic-values>
            </column>
            <column caption='decadas' datatype='integer' name='[Year (compartimento)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Count' name='[cnt:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (compartimento)]' derivation='None' name='[none:Year (compartimento):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' />
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Bug Tracking/bug.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</column>
        </pages>
      </table>
      <simple-id uuid='{821B62DE-5F86-4FAA-9D13-949754080795}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Total Crashes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60080F8E-C771-40C0-8326-22A3D53D9266}' />
    </window>
    <window class='worksheet' name='Total Crashes (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' type='size' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>191</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0F946E6-50A4-46B1-AD21-4829D02D9AC0}' />
    </window>
    <window class='worksheet' maximized='true' name='Crashes X Year'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>202</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight phase:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Region:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9D7AC9C-D8FC-4B1E-8D42-69C27767DB9D}' />
    </window>
    <window class='worksheet' name='Crashes X Operators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48119BE2-5922-4337-BD41-D67227AF0139}' />
    </window>
    <window class='worksheet' name='Crashes X Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B35A7CC7-D186-4A22-AD44-080B82C943FE}' />
    </window>
    <window class='worksheet' name='Crashes X Flight Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight phase:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C2BD243-BCF8-4CA4-AC76-B0AF7E71F2D3}' />
    </window>
    <window class='worksheet' name='Planilha 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[attr:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Survivors:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{539815B3-8F35-40E0-9F1D-0E551A3CB95D}' />
    </window>
    <window class='worksheet' name='Planilha 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{729E6B5A-E87A-4370-818C-A9F37A622853}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crashes X Aircraft' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Crashes X Flight Type' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADaElEQVRYhe2YT0gqXRjGn2suQklUKmiT0CIK2oSNJFRWC6FaFFhUUK2TNi1sU5uCJFdF
      LVrUbqptuxCEpD9QmxACCzQqrTaaKUkzjX/mvN+iL++V4vLBx3UW1x8cmDnvOc8855k5ZzE/
      iIjwF6NS2oDSlANQ2oDSlANQ2oDSlANQ2oDSlANQ2oDSlANQ2oDSlANQ2oDSlCQASZKwvb2N
      3t5eWCwWjI6OIhwOAwAYY+B5vlCbnJzE3d3dF414PI7+/n60tbUV2tbWFgAgGo3C6XTCarXC
      YrFgeHgYwWCwMFcURbjdblitVlitViwuLiKTyXwUqQTwPE/r6+uUTCZJlmU6PDwkl8tFkiTR
      6ekpzc3NFdWcTucXjWAwSB6P51v9QCBAJycnJEkSybJMZ2dn5HQ66fX1lWRZJrfbTaurqyQI
      AmWzWYpGo5TL5YiISP3n3z8wPj4OtfrnoziOQyAQQD6fRzgcht1uh8FgAAB0d3fj4uLii0Yq
      lUJNTc23+q2trUX3LS0tqK6uRj6fx9PTE56fn7G0tASNRgMAqK+vL4wtyRb4dfGMMfh8PtTW
      1kKr1aKjowNerxeJRAKMMRwdHRWN/ySRSBQZ/w7GGB4fH7G2toampiYYjUY8PDygubkZOp3u
      e2//b2n/nUgkgs3NTUxPT8PhcBT6RVGEXq9HRUXFhyG1Gi8vL1/mDw0NFa7T6TR2dnbw/v4O
      l8tV6FepVNBqtWhsbEQkEkE2m4UkSZAkCclkEkajEalUCisrKxgYGIDNZivNF5BIJMDzPObn
      59HQ0FBU83q9GBwchMFggEqlQldXFyorK3+rp9PpMDIygmQyCVEUi2pGoxFjY2OQZRk3Nzcw
      mUwAAL1eDwAwGAyw2+0IhUIASrQF/H4/bDZbwcSvmEwmHBwcIJ1OgzGGYDCI+/v7ojGCIMDj
      8eDq6gqMMYiiiL29PdTV1UGj0WB/fx/X19fI5XIFjdvbW1RVVcFkMiEej8Pn84ExhlQqBb/f
      D7PZ/CH+R4//f1lYWCCz2VzU+vr6KBaLUSaToY2NDers7CSO48jhcND5+Tm9vb3RzMwMXV5e
      EhFRKBSiqakp4jiO2tvbaXl5mQRBICKi4+NjmpiYII7jijQ+icViNDs7SxzHUU9PD+3u7pIs
      y0RE9IOo/Ff4r+Yf2nWuPOkujgUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crashes X Operators' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crashes X Year' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='84' name='Planilha 6' width='180'>
      iVBORw0KGgoAAAANSUhEUgAAALQAAABUCAYAAAAriR2wAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVGElEQVR4nO2deVRUR9qHn0FQRCXjFheijsY9RjFcGRrFBSNExWjEJUJcIjOucYkB40wi
      RMXEMYommihMUImjJs7gp0eN27gApiHQKiDRgA6CRkFEE1tamu6m6/ujWQUEBBXb+5zT59BV
      t6reqv7duu8t6r33D0IIgYyMmWDxtA2QkalNZEHLmBWyoGXMClnQMmaFLGgZs0IWtIxZIQta
      xqyoVNAqlepJ2CEjUyvIM7SMWSELWsaskAUtY1bIgpYxK2RBP2kMsaxyX8wRzdM2xDypO4JW
      JxLmO44hCglJMYRxvmEkqp+2UbWPQXmQg32GMqDRgznphHlLSFLJTwCRAOlheBf+XR0etdwz
      TB0RdDo75s1kp8VUvo1QoYr4lqkWO5k5bwfpT9iSyAAJ77DH1aoB5fETuHoMpYyeCxgZpEKl
      KvwsY2AFNkoBNZfpw/tqOsFqoZknSt0Q9JndhKa4sChgFO3qA/XbMerTFYy+FsquWMPTtq72
      MCg5fsKVoc6WNapm4DIVqmXlSV2mTgg6PSketfPg0pdhy1fo3VfN+YvXAdNsMuqDFfiOcUGS
      FAyZFVzskhhSCfcdg4tkclcmr4vFlBVJgORNWGoq4Qs9UHiHkQ4kb53OyCEKJElCMWQc/key
      KJyRFh2E5A2epkt+4fSkjmXddDdT/S5j8A1LLKi/cBZTE7tuEi6VXN4NyuOccB1KDfX8wMxq
      IOPEZ0weojCNy7g5zBi/ooQdN4gO9mXcEAWS5ILPjlQMD+tr0bh5siEZDi4yuT/eYalc+Gos
      0uxwbhcedjuc2YoP+EEN6WHeSH8N4LPJQ1BIEi5j/Pkho3AyUhO7brLJnZRcGOMbTurjmqdE
      JcTFxVV2SI35ZdMY4eAfUSY9wt+hKD3C30F4BJ4UN/OEEHlXxZ5FQ4RbULwQQi9Uq0eKWTuv
      ijwhhMhLFqFTBgi/wzlCiAjh7+Ahpkz/q1gdedOUL+6LtITz4oZGL4QQIu/sWuHhtFz8WKJN
      r21pJazIFP+Z5SS81p8Vt/VC6G8fF/5uTgX1p4ltXg7Ca8oCseC7C6KgygrQiwj/AcI/oqKD
      THU5OJT4eG0TaUIIkbZNeDn4i8IRKmVj8mbxltMUsfHsbaEXQuiTg8WEwmPTtgkvh7+IkPM3
      hEZflb6WtafUz5L5nfBx8BHfZZq+Zv9nlnDyjxB6IUTaNi/h8JdvRapGL4T+tji73ks4vbdX
      ZAshMv8zS4xfpRS39UII/W1x3N9NvLU5+WGD9cjUcK6oHawb2kBODhoo4VtqyMmBbr07FKXY
      vtSRF+sDtOOt0S6sDI4nHStiIjOJy3gL57XFdXbLzC6q5yXvNfi52BZ8t6J+9n4+8p1N4p3c
      grSRVDhhaM6gjHPGe01fmlkCzVyZ7tUJT+UZcC+wbdB81kzsxEMHs9DdWPrwIR8ZpKI63kR6
      dCRXXX2Y2beZqf0GDR6woy3derXBBqBZc2z1dyvua2W08mDKyGDW701h4szmnPpvMqPfdS5u
      r20HOtpYAs3oO8aNTp5n+ZnXyVHGkRoRh9u/S3Y0E+j6qJZUSJ0QdIde9thuPsVpzQjcCxVt
      +JnEc7a8OtGu3DIGgwEsLQs6YMu4r4+yxPHB7qQDbej6sm1x0u19LF+chNP2I4T0sMEyPQxv
      z9Qa2d+5cyViptjdqETPj0bRODxuGjHQeyLrl5wkZcwfOXRzIovLjHkB+fkYrIrtsvc7yDcT
      Wz12C+uED43DBHy6RhG0bD/XdIDuGvv/vpR97XyYVGLADHl5GADDnXMEh52gm+sA7OhKv/6w
      76tgzt0xAAbuZyQRfeF2+W1ptdynBS1b1cdSl0WSMpGMEtmNGtuSkZLCHUPBSdPIAed+SnZ8
      c86UducEW3am4ursUI0OFqxuDHWudeHZ9XgV26h9/J9p4Mi68itVXe0s09dSNKaxLVz+JQUd
      JfK7jmFis+/ZtOoYTBxTeo7Ny0MHpt9v8/fcchtEHxrh4GhP/Ja17L+mA0CnvkxU3ONZSaob
      gqYD3huC8TKGMWWQhDRoCmFGL4I3eNOhxFFXd73HMIWE08hFxNivZYN3B8ASxznrmdXyJItG
      OiFJLoyc9zVJudblN2U3Ch/PdILcnHCZ8AnHcpvRskS2w4QFvPbzctycJIZ8fgZohec/vkBK
      +JDRThJOo79E4xXMx+4VLbyVQy2tbpSHpeMcVo3K4ssJzkguE1gddafKZcv2tSTNeeMvU7HY
      NRVnScHM8JsF6a3wGC8REwXDBj8w4/74OR4uEpKzF6HG6Wz+aCCNgFaeK1g9OJsNXs5IksTQ
      cZ9yrOpmVo/KnOwncVNYFR5+A1O30Uf4iwEFN0+1Ts4NkXrtrumGV68RqTtnCSef70Tm42hL
      CCFEnkgOnSIG+B0WOSVS07Z5lXtj/6SpEz60eaPh+IETuHosfTx+rvZnvl24ksNp99BjRZMe
      b7JytSePxVtND8PbcwNXu3izNti9wn8OPU3+IMTDHzSjUqmQJOlJ2WN+aI6weOw5xh1cQkX3
      TzK1hyxoGbOijtwUysjUDrKgZcwKWdAyZoUsaBmzQha0jFkhC1rGrJAFLWNWPF+CjgxAKtjk
      //TR8MMHErPDK9hEVSHPZmjUk+L5EnRdQhPB8YhBxCl/omQAeLXjBSMDioNpZerGfujnEcOZ
      n1D2c6ab8ifOGEYwsOCXGLhMRbWeJjhwGfLjB4t5jmfoZLZOH1kQ56ZgyDh/jmQVZEUGII36
      gBUFcYqKIbMILgpgrKTcxJVs+Ww6bi4SksKDhfvKc3AMnFVG0b5fX+wbHuW4sngvcql4wcLH
      EKhjWTfJpfyZu5QbFUmANJGVWz5jupsp9tJj4b4iF0sdu64g9lDCZYwv4YWBfepY1hXEAkqK
      IYxb9l+q6wjVFZ5fQeda47DoGw5GqVCpIghyPscnwcoSBzTDZfFuolRKds9vxPd+oSRUpdz9
      XNqOX8+BqBiOLn6Z07tPleOzJxBxFKQ+nfizC0T9lPAQQy8T6r+Ttv5HiKlSbNZ9ctuOZ/2B
      KGKOLubl07s5lQ7cDOfDNTrmhEehUsWwb34jQnxDSQFSdq3iRN8gIlQqVBH7WPVm26qMYJ3k
      +XU5rOqTvf8jfGcnUhxaWCJqw/YlOpoCGGn31mhcVgYTnw597Cor14UenW2pDzRr/sfy274Q
      Q2SuC359wOGmM+pNMVzwc6BnBaYOmr+GiZ2q+lPZ0qVHZ2xNBlBogeaMkrjUCOJKB/aRCTj8
      qTPZgctYeOcNBg8fwOB+vWhexdbqGs+VoG/fygLLrlgCt/ctZ3GSE9uPhNDDxpL0MG8qDC00
      GDBgiaVlNctVwIWTh8nQZ7DI6WBBSgonL8ylZ7mK7kznKou5Euz9OPjNxLJ7pd0/5XjXeI5H
      RhGxeR4bPnuT9Xvfx+EZVIf5uxzqOwWxgOf415442jv3ww7Qau9Di5a0qm+JLisJZWJG6XKG
      PPJMAYycCw7jRDdXBthVoVylpBOnzGDQ8oiCpyMdxM8+A+VjirErpJGDI/bxW1i7/1pB3J+a
      y1FxpueURB4i1bonw6e+z6ov5vNaZjy/3KykwjqK+Qv6YiieLqY4RFWv1XzlYwrrtBvlg2d6
      EG5OLkz45Bi5zVqWLnd1F+8NUyA5jWRRjD1rC+IbKy1XGTdjiEoexNBBhfEerRg8zJ7kqBge
      q4ZaebJi9WCyN3jhLElIQ8fxaUFgn3VuHEFT3XGSJJxGb+Ke91xGlR9sX+eRN/iXR2QAUnAn
      wndMLRWkK1P3Mf8ZWua54hl0+58AA5ehkp+F+Ewiz9AyZoUsaBmzQha0jFkhC1rGrJAFLWNW
      yIKWMStkQcuYFbKgZcyKR/zHSj7ZZ3byz12xpN3Lp+GLrzBiug9uHX/nUOg5+voMp3Xt2lkL
      ZHJoeQB7r5dIshvDMv/htI4PZXnGSPyHV9Pq+FBC8cHHvlYNlakBjyRo7fntfH7ElmkfBdGj
      qQXa2ymcu3Gvtm2rfcEUCrjSZmdyxiG4hu1m1uGT23x5BEHf4ccjOYxZMI0eBRvGrJv3QNEc
      ILM2bXtq2PsEI0+6zybVF3T+Ff5n7cCUip52nZ+F6vsgok8nk62rT9thc/lwXHesgav/DeKf
      By6TlZtPvYbtGDTjfSb2bETRbPZ2ByLWhRBhdGe83V6+iwWIJRaKZ1fNZQ5t28oPidnkN3wR
      h4kLmKZoQb1y6vCvwmxcHvGhy8kY6c/w1kB+Nmd2bmZ79DVy8+vT4k8t6D08gIkFis+5dJxv
      Duzn7LVc+OMrTHp/Pi4cYnnAXq4De2P3AuA4OxifV29wavNXhCdmo6vXkBeld1gx/TnbyfiY
      qb6gb2WR2bANFbzBBNS/ou45Cd+gTjTlGvs+O8ovdMceaNJtDAsHdKC5dT3ytRf595YfudXT
      zfSOk/xrHAy9RNsJy9nQ1ZZ6DGeIw4MuRz4XDkdgM3Yp6+daU0//GzFbdxHVcw6DXyivjge4
      vpeAmXuLvzvOJrgSv+LqgQ0cafQ2AV/0oKmVnrQ9KzleIj/rlo4JPqt4t40VmrhQQs5l4jJ8
      OP7Bfcu6HOePEtnmrwTN/RNW+VpuZ+VUPt4y1aL6gm75Iq1zc9FC+aJu+hquAzrRFIB2dCix
      Ubz+vUSCQ77kclYu+QA40h1Mglbr6DZtLgNalJFhCS4RfzqWiKOx7CyR6ugIg+2rUEcVfehi
      Mvn5Zj+mzehR0B8rrBuWXhjq5DycPm1Mf9u2a0fT7AfrKEEXB9r/az3L016hVw97nPq/9szG
      7tVVqi/oeh15WbuTcxoFimq9ZOM8/96rZ/iiz+nR1ArTqsPB4uymL9P5oWIG0KNrOoqAdR6U
      G5dcpTqqg5F86tXe2qb1q0z7dBUZl5JIvXKBXSvjWPKPObVVuwyPtA7djP7ujdn7xR4u/qYH
      8tHevkj0+VsPL5avQ9eoOa0bW4Few68JSn7+rfLWrly6jB7I1+vJpws9Wpxi59E0tPkAejS/
      xhF/tfq9qBqt6GQTzZ7TWSYbtBmk/Zpbaakibv6Py+p8QI9eD2ReJCEjnxbdJfq7jWF4RWHe
      Mo/MIy3bWb86GT/dTjYvW8C1XIrWoeH3igvVs8ejxzqWLfie3Hot6D3CjZdeqETR3ftjf2Aj
      C2bmUq/L2/j7DuHPU6eT9uVG/MLvmW6sOivwfLffo3SjCtSj51tvc37dpyzYnku9Fr1xaFPV
      sq3p6/IHNnw0h+35DRk0dz1ebfNI3BrAN2km27u4v0efx2T584ocU1gJv11LRd+sHS82sgL9
      b8Rs3cTNN/7O6PZP2zKZ8pBDsCrhXvLeoqVG6reg94h3mSaLuc4iz9AyZoW8OUnGrJAFLWNW
      VMmHVskPIJZ5RqiSoGUfWuZZQXY5ZMwKWdAyZoUsaBmzQha0jFnxSIJesmQJkiQhSRKOjo54
      eXlx8eLF2ratRoSEhBTZWNLWEydOlDouKSkJV1dXQkJCAEhMTGTQoEFlyn788cfltnPjxg0W
      LVqEQqFAoVCwdOlS7t+/D4BOp+Prr79GoVAwcOBAduzYgdFoBMBoNLJnzx4UCgVr1qxBp9M9
      xtF4jhCVEBcXVyZt7dq14ubNm0IIIfLz88Xx48eFr6+v0Gq1lVVXIQkJCWLu3LkiJyfnket4
      GDk5OcLf319kZWUVpeXl5YmPP/5YrF69WgQHB1dYNjQ0VJw6dapMukajEX/729/E4cOHhU6n
      ExqNRqxZs0bs2LFDCCHEoUOHxJIlS4RarRbXr18XM2fOFCqVSghh6u+cOXOEWq0Wfn5+Yt++
      fbXc4+eTGrscFhYW9OvXj1atWmEwGCovUAG9e/dm48aNNGpUrU3WVUalUtGtWzdatix+4v7R
      o0fp0KEDffpUvOft1q1bZGRk4OjoWCbP2tqawMBA3N3dsbKywsbGhqFDh2I0GjEYDCiVSqZO
      nUqTJk1o27YtkyZN4scffwTg1KlTTJgwgSZNmjB9+nRUKlWNxk/GRI0FrVar2bp1Ky1atCgS
      Y0xMDGPHjkWSJMaOHUtMTAxgusweOHCAYcOG4ejoyOzZs8nKMr3kLzExkRUrVgCg0WgIDAxk
      2bJluLq64ujoyPLly4suy6mpqUyePBlHR0cGDhzIrFmziuopj9zcXE6ePMmAAQOK0rKzs1Eq
      lXh6emJhUfEwHDt2jN69e9OwYcMyeRYWFqXK3r9/nwMHDmBvb09eXh7W1ta0aVO837RLly5o
      tVqMRiNarZaOHTsCYGdnR+PGjcnNrcZea5lyqfFuuwYNGtCpUyfOnj2LTqfj9OnTJCcns2fP
      nqJjNm3axP3798nMzCQoKKgoPS4ujg8//JCNGzeWqdfGxoaZM2cSEBAAQFBQEL///juZmZnE
      x8ezfft2wCT+whOhPAwGA2vXrsXLy4v27U3b5BITEzl58iSBgYEPFfP+/fsBGDVqVFG5efPm
      odFoeP3111m1ahVGo5HDhw9z/vx55s2bV+RrazSaCuuVeXzUiqA9PDxISUnh998fssEf0Gq1
      BAYG8sYbbzxye0aj8aEifJALFy5gY2ND586di9J2797N4cOHi06KQqKjo4vcHo1Gg0ql4r33
      3ivK7927NxEREaXKKJVKMjIy8PPzK2VXgwYN0Gq1ZGRk8MILLwBw6dIlrK2tsbCwwNramitX
      rtC+fXuuX79OTk5OuVcBmepRY5fDaDRy5swZLl26hKWlJd27dychIYGkpCSMRiNJSUkkJCTQ
      vXt3+vTpw86dO7ly5QpgclciIyPJy8urcnt2dnYolUouXryI0WgkPT2d334rP/LFaDRy4sQJ
      RowYUUpsgYGBBa9UM31WrVrFjBkz2Lp1a5HbVJ7P/SB5eXlERUXx5ptvljnJLC0tcXZ2Jiws
      jHv37nHjxg127dpF//79ARg8eDC7d+/m3r17bNmyBUmSsLSUt6fXlEcawaysLEaMGAGY/Mj2
      7dvj6+tLs2bNAJg2bRr+/v5cvXqV9u3bs3jxYtq2bUvr1q1xd3fHx8cHtVpNy5Yteeedd3B2
      dq5y2y1btmT8+PHMnz+fu3fv0rdv36KlsAdJSUlBrVaXmp2rQm5uLseOHWPGjBkPPe7u3btE
      R0cTHh5eKr3QHXF1dSU1NRU3NzesrKxYuHAhffv2BaBXr14MHToUNzc3Jk+eXKOrlkwxz9wG
      f61WS1paGh07dqRBgwZcunSJkJAQli5diq2t7dM2T+Yp88xd43Q6HSEhIURHR6PX64uuALKY
      ZQD+HyxwURctSyStAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Planilha 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Crashes' width='192'>
      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
      1AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Crashes (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO192XLjWJLlwUqCO7VEZERWR1VXWz/3e5vNf4/ZfMjUQ1lNZ0VWRGaGxBUg
      dmAeGMd1AQEUqeACSThmaamQSJC4uO7Xl+Pu2mw2y23bxmtElmVI0xR5nqPqHrMsg67rF/hm
      +yNNU4RheNLPyPNc1ug17gWuoWmaj+7PtG0b/X7/Ql/ttFiv10iSBMB2EXRdf/ZDTtMUhmEg
      TVOkaQrTNM8iPPy8PM9P9hmGYcCyLHQ6HRiGcbLPuQTyPIfrunKP5b1uXuh7nQWWZSEIAmia
      hiiKAABRFGE8Hlc+6DzPkWUZNE2DruvI8xy+7yNJEmRZhslkgjAMEQQBAKDT6aDf7yPLMgRB
      ANM0YVmWXIPQNK3w70Nw6o0PAHEcQ9f1xp+Gz0EQBIiiCLquw3GcR39/1QLATU+oGzvP80eb
      Mssy+L4P0zTR7XYBbDdHkiQwze1SqeZIp9MBAHiehyRJYFkWXNdFGIZwHEcEp9PpwHGcZwkB
      N2aapge/dx9Q63e73WcL6UtA3en2+kT+O7IseyQAtm2j0+nAdV3EcYw4jpFlGbIsk6MyiiKY
      pok8z5GmqRyZmqYhDEMRHsuyYBgGkiRBHMcwTbNgrwdBAMMwoGnaD5kwmqad1NzabDbodDoi
      4K8JSZLA930AEIVWxuu76+/g5qZWMwwDjuNguVyKaZNlmZgtAGTjc7OFYYg4jsWE4mtN05Tj
      lBu+rF0oJJZliRllWdaztGySJEjT9OgautPpiIn4GhFFEbIsQ7fbrVUgr/YEKGv/wWAgmh6A
      mCdxHGOz2YidyBNB0zT0ej0xc4CtNjYMo6AtaZokSVJYZMMwEIYhPM9DmqZwXfdZZoymaSKg
      x4bv+7Bt+9U5vgDk2T518r5aAej3+2J327YN0zQRRVHBIaXTC2w3MCNGFB5N09DtdsVGtm37
      0UYn0jSV92uahjzPRQPRbAqCoCCE+4DvNU3z6Jo6yzJsNpujXrMpSNNUBIDPuAqvVgB0Xcdg
      MMBgMEC/3xeN3uv1ChtYFQZufHXBNE2TawBb02q9XssmpmDQrOK1qjZ5FEVYLpfwPG/v+6AQ
      9nq9Wjv2uej1esjz/KDv81JgmiYGg4EovjohaIQA0CE9dshP1eDAwyYvmzLlzy1/FzqzSZKI
      c0xtbxhGQdMTdfeS57nc774mESNXx05U0bnmvVwK1NJxHCOKIoRhKGv9XGiahk6nI0pjs9lU
      Xk9zXTe/dCJsNpshTVMxWbhxnxP5oIlS914uQpZlSJIEm81GNqJ6GpimiV6vV3Bc4zjGcrkE
      sHUgh8MhAIiTS8dbRbfbFUe5nBuwbRu9Xu9J0ybLMoRhiCiKkCTJUUyhTqcDy7JEuE7lZ+yD
      OI7h+z7iOAbwcIKORqOCD/Yc8FoMezPwQTQiCsQvqNqjnufJAwIAx3FgGEat/R0EASzLwmaz
      QbfblYXjhuf74jiG53kFQVC/B0HhGI1GsnAqVMfRcZyCFovjGN1uF1EUwbbtgkOmChkF4ykF
      RPOq1+vBNM2jUCPCMBR6AAX5nODz5qlMje95HsIwxNXVFYIggK7rP+T/lH0+3/fFKtA0rTkC
      wMiLugnV3wVBgDAMMZlMMBgMADwca6pzmee5OLSapskiMqJjWRZs2640QWga8b30HfI8x3K5
      RKfTwXg8hud54i/0ej15b5ZlcF1Xki480RgyVZ1rotPpVCblVJDCUdZmPwqecucOg+Z5jvV6
      Lc8tyzIYhiG5m/F4jC9fvmAwGGA6nWIwGEje5Snw2VW9ln7gfD5HnudbM/gUN/hclO1uFTRZ
      fN+XL0/nrex0JkkC13VF+rMsw2q1kkQYM7Or1UrsX13X0e12C04TtT5NmyiKZHMHQYBOpwPP
      80SjqPkDy7LE/uTfGGYFHoRtn4dKYQRwNIeVmv/cm18NP+d5jv/5n//BeDxGr9cTvhZzL4PB
      AHEcYz6fSw5mNBoVrAA+d94HTWAKlHp/zKXYti2mb6MEAChqR3Vjqz+Ti1P+Pd+vvkf9PY99
      Li5NF25Oz/Pg+z5Go5HYiYzDdzodESY+APV79Ho9+L4v11JtajpklmXB8zwRgjRNxUx6CsxU
      c3M8B7wX27afnZT7EdDsC8MQi8UCcRxjMpmIgur1ehgMBkiSBKPRqPD8SApM0xTD4bDw/T3P
      E/pKt9sVq4DmDn2oJEnQ7XYlWgc0xAeoehCqSVMWBPU9Zc+e5kH59arpwA1qmqacLHQG0zTF
      er1Gt9sV04X2KV+32WyE4gBAtJbqxKlaKooibDYbCae6rivfizyip+gIfIg8/Q7ZvAwJ894v
      mfk1TRP39/fI8xzT6VTWYT6fyylnmqZQNNTnrGmanAjj8VhO2CiK5HTO8xyLxULMzXJgopz3
      aIQAVIUPq7R4lSDse33VGUrTVOxAwrIsMYdoQrmuC+DhVDEMQzSwuonCMESn0ymEQuM4Fs1e
      DruqhDy+P45jiVtXIYqigsAdsol3XffcIJt2PB4/0vCqecg1Lys6/p4mLYWaJ8Z8PhdFBOBR
      8KKMRqyKqp3rNvihG56g+WGaZsFnKNuH6qLVXa9MsFMFSrXNTdMsbDg1fh9F0aNTjNder9fo
      9/uVJhH9iENj402iOSdJAs/zKu+j0+kIXwp4KFbiaV0V+VIFxPO8Qq6mDmXF0TgB4L9/9FqG
      YcjGI4VhOBxis9kUFmmXJi0fv+XXqtegnxAEAQaDQeWmU7PIvBZPDtXMqhIAav1DNL9lWXAc
      Z6cAUBmor6GDSg17DGRZBs/zsFqtJOxa1uqq0qATC2wVzHg8Fh+Atjx9MIbB+TlEOapY/szG
      hEGJskP7o++nScM4clU8fxf48MubQBUMCpdhGMjzfOeGq9pMdEhXqxXyPK9N/FAAyv5F1Wfw
      fsu0jzIYjozjGI7jiL0cxzEMw8B0Oj2aACRJImZc+TuZpomffvpJtDjvg4JJ049mDr+3aqKq
      93+Imdw4AdgHZc3MBVVDl9RslmVJzD8IgoL2ferhljVU1XvoGDuOA9d1H/F1mHzha6siU5Zl
      ST6hLizKXAYd6Lrv7jjOQZwhOvq+78vm5KbzPO8oSTJGf6IoKnw3bvLBYCDVdWQFlE1U4OH5
      sjS17B9WafwyymZnowRgH6g3UCa10U6mM8rEFBeap0Dd5ikvYN3PKtQHlSQJVqsVut2uJOv4
      8Pm5ai4A2Jobruui3+8/qdlpH9cJAP2dfaGumbr5n3OtXaDt73keRqOR3AM/h59JIQS25hvr
      sBmdS5IEi8VCkoLEIRq//JpGCcA+EqzerGoSqJubG77sWzwXdZEo0qTVCBC1E2PQjFDwIUdR
      VGCTMrQXx/GTG+6p8Odz7pMmE783sDXLHMc5SuQoz3PJr5Qz73n+UFnn+76YNDQF1+u1+CHM
      +juOg/V6/cPfi2iUAAB4pAWr/IJyOLSsvapQFU4ro8rk2QW1y0CWZcLVIZ2CUM0a27YxGo2w
      Wq2kTQdNs6dAM0hNwKk4ND8APDBm6cCze8IxbH8moxjmvbq6Kvyd1BIGB8rgKc5T4BS07UbE
      x6oSNNzkVRq8Kk6s1vYCj80j9RpqlpabiqG5fUON5Oir1yFhjzmAOjOF0RmaQofY2XXF67yP
      50LTtpylY0V+fN/HarWSsG/5mpZlYTKZCKWl7BvxdKVy+JHgyC404gRQNzT/DTzY19Rsaiz4
      EM+/rNnzPMdwOJR2IHwAzO4+tQFYbFF34qimA+P7/Gxu/n6/j06nIyHHfe1tcpZ83y98z3P1
      KdrHpAyCQO4ZqD5tR6ORaPYqsEPHeDyWa5xCCBohAAAeaXTVOQIeEjqqKVPW2OX/V2UTqYFJ
      g1DNj7IWqsOuUGf59/RHmEFmiJHJubqinF3rRKr1ISHdY2Gf00FNFqr3Rae2fJ2q/Mp6vcaH
      Dx+kzoKvO7YQNEYAgIekEAA5/lSNrLL8VCe4/HMZKq2azt5msymQolQ8lSQ7JMzIJJcKJuNU
      KvIhZgfNLVZQHTtp9aPgMyw3ISiHIHdpf4ZzDcPAbDY7ibA3KhHGB5imqWRvWU1FjUKHajqd
      Anis4XeBi818wCE5ABUqQWsfMJXPe2C2N0mSQrMs9hba99qkdTNe3xSuD4DC/QIP5ED13haL
      BSaTibSYUbP3NHfZteJU9j/QkBOA3PQwDNHv9wvHZK/Xk2TNcDjEfD7HcrkUzUpGYdnM2bVo
      6qlRdryrXvsjmpWRjKrrq77Oer2ubdm4C7quX6yiC6g+uSjI5aRk+bU80dlYIAgCSRaGYVig
      OJzqHhohANyIde0D+TvDMHB9fQ0Akt1drVaSXFE39CHtBJ/yAdTfs35131aCagF9GbwOTT3f
      9yWBti8uYfYw9MwARRlqsq/f7yOKIkn0URDG47GcWiQZMhRKP6kMNcezC4f4Co0QAMdxEIbh
      Xra1pmm4vr4WG54JlqceRBXKPoNqUtVtLGY19zWFeMRX+Rvr9VoKZHRdF1r1JQvUnwKdUjVC
      U4ZpmvI3cvRZCQZAiIMq1O4ajP2XUX42dZu8Kmze+LYoh7Tm0DRNbMPb21ssFosC1QB4HqO0
      ylatQpIkCIKgsgtE1XdVBZtCRyeQp5RK3TilzXsMsLpqvV5X3n85uUanVv07BSLPc1Fig8FA
      CpKqoNI0qnJHNKmAxwzjqqhdY5xgUgYOOc5N00S/38dms4Ft28KnKVMlgP2OxLIP8RRWqxWA
      rTYbDoc7yxppE9flKqp4LU1Fua5511qxhpu5D9ZzMwzNoMe3b98QRREMw5D8SBm7Mvflf6vC
      UbfmzEE0QgCe05uSPgOPV8/zpFAdeGzeqCfDsTZZnm9besznc/R6vUeENn4OHbpdgqiGC4Mg
      qOxl3xSQAl6XqSd4umVZhvv7exiGgaurq0K0i8+Mtbyz2UzyJf1+v9B1Q0W5uQCh+glq5V15
      L/B1jRCA50LTNKkkUvt+lo/lXbZiXfKMP+8CX8dijzAMC50ngIes6K7vUb4mSWH0M5oS33dd
      VxidbC2zizJNglu/38d4PEan05HNp07ccV0XvV4Ptm1D13VMJhNomob5fL53drucT9mVaCtk
      0A9agQZC13V0Oh3c3t5KB+YqTVt1BKp/K2uKfTZd+XMY32eBNoCddnJV1Il+AfsQTSaTJ7/H
      OcBi9Pv7e6FysLdPt9utdNxHo5GsCZsJOI6DzWaDMAyh6zru7+8Lm11NmJH4pwYcKEB1AY6q
      50clwlwD2+E0si3KoeBxSe2iOpjl1wGPfYO6DLKabSb1ocxGrNPOdPDY1azcqr0KVX5AEAQS
      5r30KRDHMTqGjg/XV+KsMtTMoh6CJyJ5Tlw3z/OkHTvXnQKe5zn6/X6BGmKaJr59+4abmxvh
      Oqmm7K6gR9n/4+tJvru9vd2eOKddttODEQeG3nbVzqobXl089W8q54iLyiytempUtW2h8KmN
      n+r8m6pTp+rvjKJcGrquQzctWM7WJmf78d/+9n8Rfc/a8jsvl0t8/fr1USE72zpWPZ8qZURW
      AN9Tfl5VdSC7nj0dX/oVeZ6/fAEAHqIs6uSWqroCAJVaoxxS47+5eemYVhHXVB9CvZ7rupUd
      Csph0Kr/eA2VGnBpZFkGp9/H5OpKchYA8O5Pfyr4QsvlUppelZ+Bbdu1pyH9ifV6jdVqBd/3
      sVwuJWfAqBtR3ujqv4MgwO+//17o/MdnKR3hvj/LF28CAdXUaG6gpwZS1GV/uaD0KdjwVn1d
      1efymmEYYjabVUZK6jS+CpZVNmWARbnWQDrnXd/IWn/58gXpxoOfJLCsx2WLq9VKzKByxlvt
      o8rI3nQ6lejQarWSIENdSJTrHoYhbm5uEMcxvn79WuATmaZZyDm9CgFQwWkwaj1pVW6galOW
      F7b8u6reNLs2dlXz3arPoY3PlihsoqVmRpsUDaJ9rgoFndUgy5C7boEHpGka7u7ucH19jWHH
      xiaO8eXLF0ynU2EAB0GA6XQqp0Y5tHl9fQ3P8+C6bqF1vXr6fPnyBYZh4P3799C0bbL048eP
      he9ebgHTiPkAxwaziVEUYTabFUyXsplTdQLUbWomdq6vrwsmk9pisQ6q4AEPWUs1wsFyRD7Y
      5XIpbd9VUmCTQIauatpsNhtpU88O26St9L6Pj43iGHaawhz0sVq7cBwHw+Fwr7BnHMe4u7vD
      hw8fCiYlCYWH4NWdAMDDRMg//vgDk8mkEBotJ0R29fCpOhF6vR6Wy6WUPRqGgdFohNFohCAI
      HrEX64Qpy7bTC1nsrc40A1DIbcRxLBq2KV3euOmraCyO48jMZHXNkyQBNA0b39/ei20jTbMC
      RZ19VK+uriqJgQwTl5WBehIcskavUgCArSl0e3srC6tyRKpS+TwdnooesWEUhYGsUE6JUbsr
      lLW+ivi7GcDCD5XPz8+5uroSpuSPzBo+BZi0UjV/FsfQldNL13X88ssviOMY4/FY+P90Qu3v
      VXFxkkhXaFKjPc9Dr9d7VDbJk7bcXoWn6XK5xHQ6lef9FCP41QoAs8S7+ORVIcgqG718XQBS
      /M4QHU2Z2WyG6+vrR0X65fcHQYDRaCThQ84h1nUdvu+LOZDnuZhETfEBgIfifibEACAPA2jf
      M8Ss7eh2u7i9vUWe5/j69avQoxkSXSwWQiEhc5TznNknlb2A6HOwix6/B3/udruFTDUTimV/
      RMWrFQCgyBdRHWH+roy6iJB6Oqj8EmpltaiDx/jNzY30w+E11F6WapSJkYnFYlEYrKF+jyZt
      fhUcLp5lGbReH2maygwCx3GkJxLLG5fLpUxp4clAqM9oOByKSdjv9yWosauFTKfTwX/+53+K
      T8YgAk0sfjdOxwQaQoc+FeqSTESdubPrfeUEjK7rYg6okwjVjhZ88HyPbdvygN+9eycsVvoS
      xx6HekrUtTFUHfpodg8NwJ///Gf8x3/8B0zTxNXVlTjJs9lMhouQOvFv//Zvsl6c1cBcj6Y9
      ND5TzVY2GsjzXDrRARC6xmQyETNJwqJnXa0zo46D85Q2rTsdynF/OlvkpZAeEEWRzDRzXRe2
      bePm5qYwSHs4HEqEJE3TJwdkXBo8wZgVZwDh/v4ewANHh6OObm9vRftrmoYgDGF+176TyUQi
      XAx/kjPFAIYaZVODFbZtYzqd4pdffpFMMc1PbnQKCqEKDinXq9VqS1U5/1KeD89xGuuc4SoB
      4O9Ux5oOKwdBsMJLFUaaBKo/0XTkeS7dGVj7wPtmAXu/38f19XUh7MzBH6vVSpoHv3v3TgTq
      27dvME0To9EI/X6/UDVWB13X8Ze//AXz+Ryr1UoIdTc3N2IqMcK2WCxgmiaCIJAT4erqSkyv
      VysAtNEPfU+d9q8iXakhS8KyLGkxWK5NoOPIuVUvCZq25c5vvvc34galmTOdTiVq8+h9ponJ
      ZALXdXF/f4/hcIj3799jMpngH//4BwzDEEd6Npvh06dP8ux4SjBUTHMzz3OhWxuGgc1mg3/+
      85+I4xgfP36Uz/3w4QP+/ve/AwA+fvyI1WqFb9++SUTqVSbCgO2mm8/n4njuY/owhlx+7f/7
      P/8bf/rv/wVb6fhMVF1XbdOuvo6EvSabOnXI8xyL+zvMV+tC5+s83/YkUomIRJIkEg0iOI9g
      OBwiz3P8+vkz9CzD+OYGw+FQOkOQrgw8Nklp57MlDLvI3d7eQtM0TKdTGXml5mZU32E+n29P
      q1Mv3KVA50kdSVSHp5zlT//1XzC6nUfclvL71bi/Gm3ifyrd96UhyzKk0CpHRDHCUwbp4CoG
      gwE8z5P4/ng8RrxaSl9V5gB4fTUHQ6i+VK/Xw+fPn6Wk0rIs3N7eAnhoFqw+C/pr4/F4O371
      iGvUOFAAOF2xDmWOTpkyYb7/WLnhy+9Xw3jlOHVdretLAR3RqtaPu9pE8p6ZwOLv+J7JdIr7
      7xqc5o06HqkK6omg6zrG47FwwNS/87ut12tJsqlO8ng8ft0CoOvb8aD7nAK7nN46zU+oD6t8
      GhCHdpRrGniiqnF70s+ZwCJoZiyXy0IIk79XFQEFgjkURmnUwSYE6SEAhB7C3MBPP/0kGt/z
      PPnM+XyOTqeDXq+HOI4lD8ET6NX6AAQfxKHNZMu2ffkB8zXl0jz+XG7sO5lM9hqI3XRwPTll
      nok/3/cfEQJnsxmurq6evPdycpIhZc5ZiKIIvV4Pf/vb36SrNCv06Des12vc3NzINXlaqX1h
      ed35fI7BYLBllp5onRoD2om7xqBWvYeosu3VUGkd1UEFp6C8FmjatuCH/CfbtitHUKlRsl0C
      UF4z1dRi/F7X9YJtH0URLMuSE2SxWDy6rhq943X5O9/3MZlMXncmmLAsC9fX14VRRbtQxw8q
      P+Cq15b/7jiOREheOhi7p8anINB0of3OWmEO3KCAPAe01+M4xrdv36BpGhaLhZg5fA1zLWXK
      i3odKiyOXTUM420IADUIyVQcsbkrT6Bq+yq7/qnIEQChNhza9KuJYKG7+73YhZucXRy4+VW6
      B9u3//rrr/A8r9IMTdN0p3nK67F5Fjd/uf5bnaC567mwxJLZ7FdvApVxfX0tsevlcikpeB6N
      pCmUabhVmeBdGAwGtc1+XyLI0wcg9I0wDHF7e1t7uo1GI8xmM4nGsemt6j9w/XlN1cYn7SLL
      Mnz9+hU3NzfClF2tVvKsNO2hlJJ1GlWKS/UxaJa9OQFQmZtVxdasJiNVWR1iQahZYc4xACBk
      ODpwr2Xzl8O6jMA8ZVJyE6sDt9WeR0xo8TPKPV5VB1Ztoc5agCRJxCFXy19VGnz5GTCyJD7G
      cZfqZYA9RVV7laCAcN4vhYEPhUOdeWqos7nKBdz7tlB/CQiCQEwMTnd86t6ooas6dFTVaVAg
      1PAnNzWHpaiTJhnL52ng+z7+/d//XQaHqJ0pSFsHts94Pp9vldRrD4PWgbWs3Oy0ZcsPlYLS
      7/eFP7LPtV3XxdXV1YuO/lCYycXxPE+m8+wLz/NqM8VlsEViWWBYX6DSzavAirzr62vEcYzV
      avWIqs1r39/fb/2Ig+7mFYFhOabFy9lcgl2Nq9L6u66d5/lBLd+bCM4CYE1DGIYHD6kuzwbb
      B1maIlUoF6SLP5VJZ8g0jmMZw9rv9zEYDDAYDArfI03TLX39oG/2isBidi4WzZyq8NlkMoHn
      eXtvaF3XxS59qeCsgiAIMJ/P4bourq+vYds2fvvtt73aPQLPY+VqAAz9YbOy096+QQX2HjUM
      Q3JArutKYCLLMgmLv0kfgGD8mBMbAUi1UDnRxbbe+163iS1MDgH5U7TjeWIyAbXZbKSF+S6Q
      /MYSyX2gGQaAovJgHTFP5KoqNCKOYywWC/zpT39CkiT4+vUrPn78KHQLtcHZmxcAagTGkmn3
      apqGaD5DZ3qFLK/v8VkGj1ZWN9HRfkkgvZixf9XxZORrMBjI6cDQ5a7rsT6a3d1s266cp1DX
      8ZmVdQw0sA6gCrquo9/v4x//+IdEk1ioVG40/KYFAHjowcmfu93uQ7Tj6lpOgKpjXOWXqEMf
      GAJlMTYjSy9FEO7u7qQpb7kXkZrwYqZ3vV4L01IFzUY1E75YLDAej2XEEgMMmqbJoJPyOkVR
      BNu2cXd3h/fv3xda3NSdArquy0DF+XwO4GFgoVpt9uYFoAy1M7RakFEVzciyDHd3d8iyDFdX
      V+h0OhKPJjed/Ha2+eD7+ZCbGCZVN0hZy5a76RmGgfF4jMVigTAMZVgGWZdlE4mliv1+X3yw
      xWIhoeV9aCOsqmOryro1ZGKMf6+qu34ZKumMoM0LFOkQbL2nxqfZaRgobppyxpiF4EwM/fLL
      L5jP53s7kucGq9aqBneX8ybA9h6n0yls28aXL1+wXq8lX7ILpEyw0ZiaU6kDzdXBYFDpk4Vh
      iM1mI8M82HpF1/VKJ7o9AUrghqWjp8aeyX7kWKY//vgDm80GP//8884Hx/fTdLi+vpbOB/x7
      k04CmoVqCLOqIqsM1gvQpKm6L9XkLL+3apSsijzP8dtvv2E6ncr8sC9fvgAomp0Mma7Xa2nO
      VWeCtgJQA8uyMB6PMRwO4fu+aPssy7DZbIQRyZ6e5Qox9WdVU9FkUNGkzQ9s7XR2WuBpyA1N
      E0ht7qVCHfta/luebwvZSWVQsSvEzLWNoqhAnGO+ZTgcir+lxvuHw6E46HVr/GYzwYdCHeCc
      pin++c9/SntEtuvm3OCffvqp0cOun8JyuZRZwHd3d5IEpCAzyqJpmoRD1TaO6pASlYhGP0ht
      m5LnuSgTlVuknjwUqtVqJaWPbKy1Xq/h+35hk7O2eB8qSnsC7IlykcanT5/geR5+//13bDYb
      acI7mUxedAIM2NLF5/N5QYMyD8ANRWryYDCQsamj0UjsbwYAqDAYXmabQ/XE5PA8NRNf1VeV
      p0Se5/jXv/6F0WhUmFHA4dyH0M9bAXgmSMQaj8cyh4Dmzq7FJ0VC5c43DXT67+7u0O/3peEs
      w55kzKqljrPZDH/88YdMtqSpwgQWGwPc3d0VShcBFEZJlfMAvA7JiKQ/A9vwZpZl0gblOWvZ
      CsARYNs23r17h7///e8wTbNA/yXyPJduyNSWNCUI0qiBy/oFP//8s8T3e72e9PBZrVYYDofY
      bDYYj8cSJGDWWK3QUpsAcHPTrFIp0GpdAKNBNKfI8GQHbjUhx/cvl0vpNKcW15RbztehFYAj
      Qdd1fPr0CavVSiaVUJOyX+hiscB8PseHDx+kLbo6vyCKInS7XfR6vYv2D9J1He/fv0e/38fn
      z5+R59txpgwApGkqlO/379/DdV0hzQGopCmwuL081ojtUHzfx3q9LnTLJlWFGXWg6FxPp1MJ
      d6oFTYdQUVoBOCI6nQ6m0yn+9a9/ieOYpqn0t2eCbLPZiD9Bu5ZF++xqPB6PL15R1u12cXV1
      Je0EwzDEZDKRTcy8iDooQ537q25W3hM3OfuJDodDmYe2Xq/x008/yTW5RmEYSusVdT3yPMdg
      MJBhhBwsyGL5fdAKwBFBjfXnP/9ZwoScK8YHwhFLACQcqsbMsyyT4m+1v+gloMBSEJEAAA4y
      SURBVBac9Pt9iXgBxVln1Lx0elU7nlEiAJIlX61WcBwHk8mkELIsFyCp34OdoFWCIhXKaDQS
      v4S5iNYJviDU2L9hGHj37h02m404ctPpVMyJJEnEsaODzDrYu7s7aeIUxzGurq7OfiJ0u138
      9a9/lXJF0hjUSNdkMpFsN6ut2NszDMNC01w6rfyZ6wVA5gMsl8vCJh6NRri/v69VCGoZa12G
      uA6tAJwBVZuWXSpYk0wziY6w53nCdWF+gZNnzp1jYJUVa205zvTq+9Dscth3Op3C932ptVCT
      XGRnkrJA7U7H13EcRFGE+/t7yZbTd/B9X/wkFtnT9udgkfI846fQCsCJoXZLU4u8CdrOlmUh
      DEMxi3zfL3DfOXer1+sdPAr0WGBlFVEniIZhYDAYyCnHqZqmaaLT6cjoWk6IKYOU519//VVO
      FXX4dRRFYnox2MAZA4eekK0AnBBZluHz58+FmgCVV0SKBTcLnTdqSJLnut2uMCDVAXpNB7//
      169fMZ1OCyYd8Hj6vAo6tcwcs2M0M9LMPpPC/tw1aQXgB7CLxMYoCWPVwPaB04ZlFdp4PIb/
      fW4uk0r0E4Dqpr2e5z0qJmkyptMpnO8DsikALDqqw3K5FN+CEaQqvpXjOI/qfQ9BKwAnAm12
      buz7+3vpMMFaVc60qhoI/ZRgMZusdlZuGhgKZdUd71mN69eBfoAUryvJMeCBSv0jmx9oBeCH
      sM/Cs4mU4zhwHEf60URR9EO2PHtzkqagDq5rSitG8vZ938e3b9+kSotdneug9lx6//49siyT
      Ln6dTkdarj/H5i+jFYATgZVOURRJhwgWjpBlWebEHApqRLYqYRaUXPkmCAHrf2mjM8xb1YGD
      YBLRsiys12vo+nYULf/NmopjZMtbATgRGB50HKfwoFjM/de//vXZG7TcsYKgybFer6Xp16Fh
      wVPg5uZGMsmmaQq3aBfoAJcL5QeDwV4m1L54GV7UC4RlWbi5uSlsQIZDj6Wdd7FJSS1oyjTK
      T58+ySRJDraLogie51UKg2VZj2jTxDEHibcCcCKwmkqlR5MafIxrn+K1pwLLTHu9HhzHwXA4
      xHK5hO/7ME3zUYNibvrValU4Afh/JgiPgVYATgja4wxXOo4jJDA2h2WPm30n2ByyoZ+qTTgn
      1IF5pIxzuB1QrDlmsmswGEhxjro+dSfDs77XUa7SohZsxUFzhXUAbJWyXC4LbMoqqKG/fcHh
      1E1CFY+HpD/XdaUfE7D9/rZtYzQaSdkk+/psNhv89ttvR/lOrQCcGGzHwdAkNeHV1RXSNMVk
      MkG320Wapk92RQD2EwJN02QEUJNQ54+whUoQBFgul3BdF2EYFl6fpik2m40wa+vq2KtKKXeh
      jQKdAY7jyHQVtRhEZYyORiMEQYDZbFaZ4DlE+zMv0CRwqntV9Gq5XErDWk3bdndmNzd2hWN3
      vboIGPDQdYKco33QngBnABNCaqKqPIKJnJarqysZKM2Hrf63D5pk+xNxHO/sEq1SvS3Lwrt3
      76TqjD6BOlSjKgTMLtBVwzfq0ArAmcBqMbW7glozW243OJvNnj1foGmbH3joF0QzsCprzTVh
      5pdtaCaTyaM5A2ooNEkSrFYrzOdzySDvi2adk68YLJJhbe3nz58Ls6pUIWCiaLFYPCqCKRea
      l6GWEjYFrAJT28eomz1NU3z+/BlpmqLX66Hb7QoZMEkSBEGA6+tr6Pp24Hi54J6JP/77kDxB
      KwAXgK7ruLm5QRRFjxilURTJw6xrFb5Lwz+3PcgpoWkabm5uMJ/PHzmvq9UKo9FIimz4b4JE
      ODJky7Y9y1C5ZqZpHuT8N0tVvCFwsLMKOnH9fl86r5XxVEj00oX0deBwizJ4MpLMNxwOMZvN
      5O9co16vVzltXu0cl+f5wTXU7QlwIWRZJkMmaN+qDaCA7UnBrmmqWVMXBeEQ6CaC2WD2BgKK
      1XIE5wXM53N0Oh2pkqvLk7C1Cj/j0PtvT4ALwrZtuK4rJYBs/cFNQSoFG0NRs6uxbmabp9Np
      octCE8FQJsFOzmXQF+DpwFqAKqFXT1HOZDgE7QlwQfBBM84NoNCNut/vy4ANtTcO/QAOoGgK
      /38fqN+TDYdVMF/Ce3VdF8BD+/MyWG6aZRls2z44ANAKwAXBiSqqZmOWM01TuK6LyWQiWWI2
      1wIg4z9fysYn1FoAtllxHEfKRpkEBCCNAH7++efaTs/MeidJ8iyWaCsAFwIJXWygRS2mhvdI
      GWb5o2oGqKHAlwRqbN43sI0EcSqNaur5vi+tEus0O+3+5/o+rQBcAHTc1E0AFPvps7UIWZCq
      tm/aRJlDwM5xvK/hcCjRId4XhX84HEorxlOhdYIvgDiOMZvNHsXEVe1HPkuapri+vpZ+nGwz
      3jSuz74gLSQIAqlaU5HnOWazGVar1VkYrS9zFV8ByuE/dfPz/xykx9GepA6/RNtfRb/fx+3t
      bSVnh53eHMdBv98/eVi3PQEuhHK2kgKgmkG6ruP29lYKaNgJrWk05+dgV63yeDyW6rFToxWA
      C4BargxVq9Me5lA9Vkg1NdF1KHaFKw3DEGrEqdGaQGcGE11Vs3ZV0AkkVGfxNYBJMXaKUAeI
      lzPfp0QrABcA+37WRXPY9Yx8oCzLXmzYsw4sDwV2nwanRmsCnRlhGCIIAunsRlQVeHieJ2NH
      m0ZxPgaaQN1+favacHCoXDm8d2gta4vjoDWBzoxdjaqYCTYMQ/rnvyazp4loBeCM4EwrdRBG
      +e+clXVIDXCL56MVgDOC3B91YEYZu3gvLY6PVgAugCrNPhwOYdv2i6U4vFS0quaM4BikqvYg
      URS1Zs8F0ArAmaGWPKpwHOdVUBxeGloBOCNYA0sqNMFRR632Pz9aATgj2OFMdXTJe2k3/2XQ
      CsCZwLLGPM8LvXu63W5r+lwQrQCcCWrLDjXju9lspBC8xfnRCsCZwOHXQRAUKsGYHGtxGbQC
      cEZw5q0a6x8Oh6+G4/8S0QrAGcERoUTL97k8WgE4E9jBjb1uAMj84DJY/N6yQ0+PVgDOBHLf
      +/2+zAerG4zHluBNGXH6mtEST86IbrcL3/dlyvnvv/9emQFmiWBLijs92hU+E1SeP4CdfSzr
      6BItjo92lc8IXddlTGoURTIKKEmSo9v7VY1nWzxGKwBnBNt9j0Yj2LYNTdNkdNCx0YR625eA
      1gc4M5gRtm1bprm8pPbmrw2tAFwIPA1aXBbtGdniTaMVgBZvGq0AtHjTaAWgxZtGKwAt3jRa
      AWjxptEKQIs3jVYAWrxptALQ4k2jTUU2GGyZ3rJDT4dWABqIOI7h+z4sy2pLJk+MVgAahCRJ
      ROv3er1W658BrQA0CGEYQtM0YYm2OD1aAWgI2Dax7RF0PLAgaFfX7VYAGoA8z7HZbGSEqu/7
      OwdJt3ganMUGbAVgMBhU0s9bI/OCYNliGIaFbtFtKePzQR8qjmNpLZNlGXzfr1zX9gS4MBjx
      ITgousVh4OkJAJ7nPdrscRxjtVqh1+sVOm60AnBB6LqOTqcDz/MKv2v9gP2RpimSJEEURbV9
      logsy+C6buF3rQA0DDSL2hDobuR5jjAMpeX8c9EKwAVA58y27Ud/awXgAbTn1+s1Op1OISno
      eR6iKPrhz2gF4MzgqNQwDGFZFoIgKPz9tdMeSO14CnEci7mS53lhuIhlWWLv/yhaATgTqM3Y
      FIuCUBaAl4YwDBFF0aPMtWqW8Gc6p5ZlAdiOh8qyTMbD8nXqNB0VQRAgDEM4jnO0SJnmum6u
      DmxocVokSYLVagVgq+2r7FfHcRobCeKMA2Ar1GpTL9M0oWkasixDmqai6Z+y0VXHP03Ts4aB
      2xPgTIjjGEmSFI7uuo3RtLboeZ4jiiLRynXfr2yW7Hsfl2zj2ArAmcCOzy8tyZVlGdbrdeVw
      79eAVgD2ADXZjxLUXNc9mvN2LtCcea1oBaAGeZ4jCAKkaSppdU3TMB6PnxWl4YSYzWazV8Lm
      kmBWlQS914xWAGpA/ogKJl90XReHL0mSwtzfMig8lmXJRPin2qEzSnRuSjS/k0oke+1oBaAG
      dRu0LBTAw7C7siBkWYY4jpGmKaIoQqfTkTj2Ls1qGMZF6gGOlVx6SXiVGZc4jn/YjNB1fW9K
      cpIkcF23sHnoPDIsGEUR1us11uv1kybQJbpGM9Lz1vDqTgBmDQGg3+8jiiJpRV4mmT2lZQ91
      WD3PQxzH6Ha7ovnLJ8Y+16yiSJwCqnP/Fjc/8AoFIEkSpGmKPM+xXC4LfyMN1jAM5HkuA6qr
      TA5d19Htdg/eGFEUvYjNlOc5XNeFpmkyvO8t4sUKAKkETDAxVLcrUcMsJk0QOnrMvF7C8azC
      Ob/DSxHYU+FFCgBLCI8VqaCDGsexnBCXmrFlWdZZwqC76mTfEl6UAHDKuspHOQZ4vSRJJMx5
      ro1YBk801UQ7BXiCvnU0kgxHE4blgrTRVVPnLcCyLCnhOybSNIXrum9qLevQ2BPAdV2x1d/q
      g4rjGMvlEoPB4KiRoddcb3AoGrcSDGM+FSt/S3Bd92j+DrPZl6ZbNAWNOwHCMHzxRSKnwGaz
      gWVZP6S98zzHarV6sydqFRp1ArSOWT1YG/vckCVP1nZ9i2jECcDwI6M8LaqRpik2mw1M0zzo
      JIjjGHEctydrBRohAJvNprVJ90SWZQiC4CCe0nq9PvG3erlohAAAzSsDbDLoxJJZytOgXLij
      8qJaVKMxAtBif5C5SaJfr9eT32maJl0WNE1ro2lPoBWAF448zwutFQG0m/4ANCoK1KLFudEK
      QIs3jVYAWrxptALQ4k2jFYAWbxqtALR402gFoMWbRisALd40WgFo8abRCkCLN41WAFq8abQC
      0OJNw2xCUyR2UG7R4tz4/1KNSPUbHgcTAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Bug Tracking/bug.png'>
        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
      </shape>
      <shape name='Bug Tracking/light.png'>
        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
      </shape>
      <shape name='Bug Tracking/mail.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh9pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFcwGb
        gMoqxwatD9mqNFL3SsBtUAtG4Cw0v9aHfdJ+YSYLUTVVAR587XPuuRefe30ztHnxrAzaqKeq
        SfCft98YVWWCH+jSXbZCbatvh07dH76vi8NzEZX45iu6HuKhbmtlcjTUL00fDwnOS71RsV2P
        2wSjI8Q8J5iPB+jn8g4J3SlEHX9WuACIMQcCyhh8QZ4LHnHtx2YQxJTFXohOD7ZqXfkYr2R2
        0rJRgrfGtDEh+/3e2fuO7p4IRFE05vC8mUXM+tfG5MOs6a+mDFL1RVe1ptINGuN8o3cmwXhq
        oW6Xy3PipneODTmFrsmQtwQcl9Q1mdC9WanHy+h+/doqslK93nWFsvCrd1KXqSPQVhP/6Cp7
        KfmL1MWuVo25lQm2J05ZlXHAmQRJGbevlADzxYIJDzJK09SnLp9yfMRlYRhxEL5kAQNIfS4i
        kHyx4NL1PcHFxL1tepM3hZq41ZHLXBr44iI3Fp3Kje7WWr9MDrjbaqP7rW6RuGfo00PVlHrf
        fx6v51Sp6qpfqsw6XaPj/42rD/SDIKQiy6x1JEt9gIh5KQ/nEHpAbWT1/3HLd33vdpaYBSKj
        gXBBhnOZAixCCmnG5ZyDlwoIMLGVkP+cMm1Z+43Ls+9tcJ4c1dhx6exc/AUr1AWVJQ/oNAAA
        AetJREFUWIXt2D9IlHEYB/DPZSk4l4uDEA05mFBzDXqbe1CQWyINEU0JQbWoo0NCuTZVq07p
        LeHQ4GIpuLi7NEuB1/A+L9r1nve+vnfa8H7h4O737/nwvsfzHldrNpv+51y6aECnVMCyqYBl
        UwHLpgKWzeXWgYm5tV+4cgEW+N1YmOo/OZB1Be9g83w8f2UTt1sHs4D9uIsZ/OwxStSYiZoD
        rZNZwG9YwkeM4gN68YuiGWePRq2lqN0R2Ien2MU9TKOOvS7i9lBvLExNR43dqNmXB5hmGJ+x
        in2M4zUOS8AO44xx7E/Mra1GjeF2G/K0mSns4BnmcQsbZ8BtxN75OGsnzj41efvgIBaxhSHJ
        LX+Egxx7D2JtPfZuxVmDeQoXbdRj+IoVrOFmvD/KWHsUc6OxdiX2jhUpeJYnSQ2P8VzS0Gcl
        LWL7xJrtGJuNz29iT61osX+eJDmzLGkNP/AdTyQN/n7Mf8J1fMENye29igfnAVzGO8mXfgiT
        kiu2GHNNvMQLx413PZBNPOwlsBWXZgCv4pWVkRNICiCLANvh8uZMyLzAsrg0hZF5gN3CpSmE
        7ATsNi5NbuRpwBTXwLWu0Y6TC9kO+Bbv9Q6XpiMyC3heuDQjkq/QZNZkrfp3q2QqYNlUwLKp
        gGVTAcvmD5YpbPKOzTAfAAAAAElFTkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
