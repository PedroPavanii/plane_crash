<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='crash' inline='true' name='federated.13ahx640xkange1eypzwl087xkpe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='crash' name='textscan.0o3l2lu1srhau61bmhiuv09zaods'>
            <connection class='textscan' directory='C:/Users/pedro/OneDrive/Área de Trabalho/plane_crash' filename='crash.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Aircraft' ordinal='0' />
            <column datatype='string' name='Operator' ordinal='1' />
            <column datatype='string' name='Flight phase' ordinal='2' />
            <column datatype='string' name='Flight type' ordinal='3' />
            <column datatype='string' name='Survivors' ordinal='4' />
            <column datatype='string' name='Crash site' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='real' name='Crew on board' ordinal='8' />
            <column datatype='real' name='Pax on board' ordinal='9' />
            <column datatype='real' name='PAX fatalities' ordinal='10' />
            <column datatype='integer' name='Total fatalities' ordinal='11' />
            <column datatype='string' name='Crash cause' ordinal='12' />
            <column datatype='integer' name='Year' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Aircraft' ordinal='0' />
            <column datatype='string' name='Operator' ordinal='1' />
            <column datatype='string' name='Flight phase' ordinal='2' />
            <column datatype='string' name='Flight type' ordinal='3' />
            <column datatype='string' name='Survivors' ordinal='4' />
            <column datatype='string' name='Crash site' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='real' name='Crew on board' ordinal='8' />
            <column datatype='real' name='Pax on board' ordinal='9' />
            <column datatype='real' name='PAX fatalities' ordinal='10' />
            <column datatype='integer' name='Total fatalities' ordinal='11' />
            <column datatype='string' name='Crash cause' ordinal='12' />
            <column datatype='integer' name='Year' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Aircraft</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Operator]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight phase]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Flight phase</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight type]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Flight type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Survivors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Survivors]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Survivors</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash site</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crash site]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Crash site</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crew on board</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crew on board]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Crew on board</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pax on board</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pax on board]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Pax on board</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAX fatalities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAX fatalities]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>PAX fatalities</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total fatalities]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Total fatalities</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash cause</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crash cause]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Crash cause</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[crash.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_2093329428268326913]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_2093329428268965890])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank sum' datatype='integer' name='[Calculation_2093329428268965890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(COUNT([__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Território Britânico do Oceano Índico&quot;' />
          <semantic-value key='&quot;Guam Island&quot;' value='&quot;Territórios Insulares dos Estados Unidos&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Crash cause]' role='dimension' type='nominal' />
      <column datatype='string' name='[Flight type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Charter/Taxi (Non Scheduled Revenue Flight)&quot;' value='Non Scheduled(Taxi) ' />
          <alias key='&quot;Executive/Corporate/Business&quot;' value='Executive' />
          <alias key='&quot;Scheduled Revenue Flight&quot;' value='Charter Flights' />
          <alias key='&quot;Survey / Patrol / Reconnaissance&quot;' value='Patrol Military' />
        </aliases>
      </column>
      <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column aggregation='None' caption='decadas' datatype='integer' name='[Year (compartimento)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
      </column>
      <column caption='Year num' datatype='integer' name='[Year (cópia)_458522763506528258]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Year]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
      <column aggregation='None' caption='decadas (cópia)' datatype='integer' name='[decadas (cópia)_969399846336315392]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
      </column>
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Crash cause]' derivation='None' name='[none:Crash cause:nk]' pivot='key' type='nominal' />
      <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;Saint-Barthélemy&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e13a42'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f26654'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Guam Island&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fa8972'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;Fiji Islands&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#feac9e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fead9f'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb2a5'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;US Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c51e3b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;São Tomé and Principe&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;Saint-Barthélemy&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Saint Vincent and Grenadines&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e13a42'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e33d43'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f26654'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;La Reunion&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Guam Island&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fa8972'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;Fiji Islands&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fb9a85'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#feac9e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fead9f'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#feb2a5'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Antigua&quot;</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Operator:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;United States Navy - USN&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;United States Army Air Service - USAAS&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;United States Army Air Forces - USAAF&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;United States Air Force - USAF&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Soviet Air Force - Voyenno-vozdushnye sily CCCP&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Royal New Zealand Air Force - RNZAF&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Royal Canadian Air Force - RCAF&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Royal Australian Air Force - RAAF&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Royal Air Force - RAF&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Private American&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;German Air Force - Deutsche Luftwaffe&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;French Air Force - Armée de l&apos;Air&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Deutsche Lufthansa&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Brazilian Air Force - Força Aérea Brasileira&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Argentinian Air Force - Fuerza Aérea Argentina&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Aeroflot - Russian International Airlines&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Crash cause:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Weather&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Terrorism act, Hijacking, Sabotage&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Technical failure&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Other causes&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Human factor&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='crash.csv' id='crash.csv_B79F7D982D2E4BB3894BEB0C102D1182'>
            <properties context=''>
              <relation connection='textscan.0o3l2lu1srhau61bmhiuv09zaods' name='crash.csv' table='[crash#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Aircraft' ordinal='0' />
                  <column datatype='string' name='Operator' ordinal='1' />
                  <column datatype='string' name='Flight phase' ordinal='2' />
                  <column datatype='string' name='Flight type' ordinal='3' />
                  <column datatype='string' name='Survivors' ordinal='4' />
                  <column datatype='string' name='Crash site' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='string' name='Region' ordinal='7' />
                  <column datatype='real' name='Crew on board' ordinal='8' />
                  <column datatype='real' name='Pax on board' ordinal='9' />
                  <column datatype='real' name='PAX fatalities' ordinal='10' />
                  <column datatype='integer' name='Total fatalities' ordinal='11' />
                  <column datatype='string' name='Crash cause' ordinal='12' />
                  <column datatype='integer' name='Year' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Biggest crash'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Aircraft]' role='dimension' type='nominal' />
            <column datatype='string' name='[Flight type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Charter/Taxi (Non Scheduled Revenue Flight)&quot;' value='Non Scheduled(Taxi) ' />
                <alias key='&quot;Executive/Corporate/Business&quot;' value='Executive' />
                <alias key='&quot;Scheduled Revenue Flight&quot;' value='Charter Flights' />
                <alias key='&quot;Survey / Patrol / Reconnaissance&quot;' value='Patrol Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Aircraft]' derivation='None' name='[none:Aircraft:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flight type]' derivation='None' name='[none:Flight type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total fatalities]' derivation='None' name='[none:Total fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]' included-values='in-range'>
            <min>520</min>
            <max>520</max>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year:ok]</rows>
        <cols>([federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk] / [federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk])</cols>
      </table>
      <simple-id uuid='{2FE32A78-D97E-4448-8549-4B62005CA797}' />
    </worksheet>
    <worksheet name='Crashes X Aircraft'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Aircraft]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft]' derivation='None' name='[none:Aircraft:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]'>
            <groupfilter expression='COUNT([__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]) &gt;= 180' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Aircraft:nk]' />
                <groupfilter function='member' level='[none:Aircraft:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' scope='rows' value='Crashes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D48AB24D-F51F-4257-BF58-CBFBD5E6B693}' />
    </worksheet>
    <worksheet name='Crashes X Flight Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Flight type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Charter/Taxi (Non Scheduled Revenue Flight)&quot;' value='Non Scheduled(Taxi) ' />
                <alias key='&quot;Executive/Corporate/Business&quot;' value='Executive' />
                <alias key='&quot;Scheduled Revenue Flight&quot;' value='Charter Flights' />
                <alias key='&quot;Survey / Patrol / Reconnaissance&quot;' value='Patrol Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Flight type]' derivation='None' name='[none:Flight type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Flight type:nk]' member='&quot;Airline Flight&quot;' />
              <groupfilter function='member' level='[none:Flight type:nk]' member='&quot;Cargo&quot;' />
              <groupfilter function='member' level='[none:Flight type:nk]' member='&quot;Government&quot;' />
              <groupfilter function='member' level='[none:Flight type:nk]' member='&quot;Military&quot;' />
              <groupfilter function='member' level='[none:Flight type:nk]' member='&quot;Private&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Region:nk]' />
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]' />
              <lod column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk] * [federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)])</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8E2A8147-B237-4A88-B253-85EFBAEF233B}' />
    </worksheet>
    <worksheet name='Crashes X Operators'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Operators with the highest incidents in total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]'>
            <groupfilter expression='COUNT([__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]) &gt; 87' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Operator:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' scope='rows' value='Crashes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]' />
              <color column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E8D6DBC-77B1-4EAA-B263-0AB096262D59}' />
    </worksheet>
    <worksheet name='Crashes couses'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Crashes couses in total</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Crash cause]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='crash.csv' datatype='integer' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='crash.csv' datatype='table' name='[__tableau_internal_object_id__].[crash.csv_B79F7D982D2E4BB3894BEB0C102D1182]' role='measure' type='quantitative' />
            <column-instance column='[Crash cause]' derivation='None' name='[none:Crash cause:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[__tableau_internal_object_id__].[cnt:crash.csv_B79F7D982D2E4BB3894BEB0C102D1182:qk]' />
              <text column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Crash cause:nk]' />
              <color column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Crash cause:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DFD2F88B-E1DB-4FBA-90FB-B2304B57A90F}' />
    </worksheet>
    <worksheet name='Planilha 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FA1DD846-DA76-4006-917C-E52C699A2C81}' />
    </worksheet>
    <worksheet name='Total Crashes '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold'>Accumulated crashes between 1918 and 2022 by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash' name='federated.13ahx640xkange1eypzwl087xkpe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ahx640xkange1eypzwl087xkpe'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Território Britânico do Oceano Índico&quot;' />
                <semantic-value key='&quot;Guam Island&quot;' value='&quot;Territórios Insulares dos Estados Unidos&quot;' />
              </semantic-values>
            </column>
            <column aggregation='None' caption='decadas' datatype='integer' name='[Year (compartimento)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='10' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='Count' name='[cnt:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (compartimento)]' derivation='None' name='[none:Year (compartimento):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</column>
            <column>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]' field-type='quantitative' max='13715428.903713647' min='-18079991.899347637' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]' field-type='quantitative' max='9701637.4852380808' min='-8875461.6709927451' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' field='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' value='false' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]' />
              <size column='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ahx640xkange1eypzwl087xkpe].[Latitude (generated)]</rows>
        <cols>[federated.13ahx640xkange1eypzwl087xkpe].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</column>
        </pages>
      </table>
      <simple-id uuid='{821B62DE-5F86-4FAA-9D13-949754080795}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Painel 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5E971B2-9D56-4556-9D87-345F5C98C025}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Crashes '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card looped='1' type='currpage' />
            <card pane-specification-id='0' param='[federated.13ahx640xkange1eypzwl087xkpe].[cnt:Year:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>199</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0F946E6-50A4-46B1-AD21-4829D02D9AC0}' />
    </window>
    <window class='worksheet' name='Crashes X Flight Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.13ahx640xkange1eypzwl087xkpe].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight phase:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C2BD243-BCF8-4CA4-AC76-B0AF7E71F2D3}' />
    </window>
    <window class='worksheet' name='Crashes X Operators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48119BE2-5922-4337-BD41-D67227AF0139}' />
    </window>
    <window class='worksheet' name='Crashes X Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B35A7CC7-D186-4A22-AD44-080B82C943FE}' />
    </window>
    <window class='worksheet' name='Crashes couses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.13ahx640xkange1eypzwl087xkpe].[none:Crash cause:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Crash cause:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACA623C8-8F7B-463A-A8D6-610C3D990D14}' />
    </window>
    <window class='worksheet' name='Biggest crash'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[attr:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Aircraft:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Country:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Operator:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Survivors:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Total fatalities:qk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{539815B3-8F35-40E0-9F1D-0E551A3CB95D}' />
    </window>
    <window class='worksheet' name='Planilha 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Flight type:nk]</field>
            <field>[federated.13ahx640xkange1eypzwl087xkpe].[none:Year (compartimento):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0F2087F-40D8-4A41-AA68-11AEC66C8966}' />
    </window>
    <window class='dashboard' maximized='true' name='Painel 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{4EC444EE-8429-4CAC-9C3E-B871E92D6537}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='84' name='Biggest crash' width='192'>
      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
      8P8Yv62vDLdAFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crashes X Aircraft' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crashes X Flight Type' width='192'>
      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
      jhdoGpSkztN2qSqlsLi4iFwut67L0y0A1AKQ1Nls5mdqaqqnzwNoDEAyjgJAMo0CQDKNAkAy
      jQJAMo0CQDKNAkAyjQJAMo0CQDKNAkAyjQJAMo0CQDKNAkAyjQJAMo0CQDKNAkAyjQJAMo0C
      QDKNAkAyjQJAMo0CQDKNAkAyjQJAMq3jvkCc85E/hDoIgvjvUspMPKqTjE5HABzHGdV1dNB3
      hiNku1H1SjKNAkAyjQJAMo0CQDKNAjCmlFJQSo18Vi/p6PboY0YphSiKIISAZVkbP1GRAKAW
      YGzoGj8MQ3DOwRiDlBKMsVFfWqJRCzAmgiBAGIZgjKFcLlPB7xG1AGNCCAGlFEqlEhX+PlAA
      Uk4pBd/34fs+wjCE53lI2GPfEm3DADy88wu++vJL/HDlJuQ2/jyVUmg0m9v3AhnAOY8L/eq/
      k811HwMojup9jjP/fAZBKBB5NVy48BP2HH4VJRZh19QkHj1cgmw/xs2HPl4//gIeLC3DiwDT
      b+J+rY3XXnsFt679grY0kVMcuw4dw0S0hKvzNbz2+nHcv3ENCzWO2f3P4etz3+Pk6TfxyqGp
      Ib/99JJSQkqJMAw7pjqp8PenewBkCGXm0V5exPlrdzFVsnD01G9x7YcfMDNZxmLVhRvkcePy
      VeSdHKrzOczXFd58fRoXroR45WgZtfv3ETr7MIkFlPb/GkvVf+Dq3B2YeQe37y3CbzEcP7gX
      jWIZJ0+epMLfJykllFIdu2eBlY2EtIO2d91/UmYZE2wZ31+5CWbmsHOHg/Pf/B0ceeyZ2o0L
      /7iDwzO7sbNcQM7ZiUrJwvSBAzABlMplWLkcDACFQgFOoYh8Lgczl8dzO0qwnCIqE0UUy2VY
      pgXDAJaqv+Dq7QdDfeNpZ5omLMvqqPEZY8jlciO8qvT5f/iNqLK9AqdbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crashes X Operators' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crashes couses' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deYxc13Wnv7fUvldX7zubbDZXiRK1kZIsyZZtyXK8xEg0SIAEHgcTZDLA
      JMDAg8FM4pnBDDALEiDOMn8k40wwk8Rx4iW2ZDlarMWmREkUN5Fskk2y2ftS3dVd+/Leu/NH
      kRSpXljdXVWvuup9AEGyu+q9U6/u795zzz33XEkIIbCwaFBksw2wsDATSwAWDY1qtgFmk80X
      GJ+JMXx9lisT80SXUsQSaVRVwWVXaW8OMNjdwkBXM/0dTdhUxWyTLcpIQwrAMAymF+L8/Wsn
      efn4MLOLCdLZ/LrvcTvtNAe9PHNkH194/ABdLUFk2RpAtztSI02ChRBMzC3xZ999ix8fO0e+
      oG/qOoos8+yRvXzti0cZ6IwgSVKZLbWoFg0jAE3T+asX3+VbP3qbxXi6LNcMeJ187QtH+ern
      HynL9SyqT0MIYG4xwX/5y5d49b2LlPvTShI8dXg3//6rn6Ul5CvvxS0qTt0LYCq6zNe/+X0+
      uDhe0fvs6WvlT7/+vCWCbUZdz+KiS0n+7R9XvvEDXBid5bf/x98RXUpW/F4W5aNuBZDJFfhP
      f/FjTgxXvvHf5NzVaf7rX/6Egra5ybVF9alLAQgh+IfXTvLa+xerfu9/On6B77x6sur3tdgc
      dSmAa1ML/Mnfv1n2CW8pCAF/9O2fMjq9UP2bW2yYuhOAYQj+8oV3iKeyptmQSOf4Pz96B90w
      TLPBojTqTgDXpqL8+Nh5s83ghZ+fY3wmZrYZFneh7gTwynsX75rWUA1S2Tw//NlZs82wuAt1
      JQAhBD95x/ze/yY/PnaeOl9m2fbUlQBmFuKMTETNNuMWMwtxJueXzTbDYh3qSgAnL02g67Uz
      8cwVNM5emTTbDIt1qCsBTMzW3qRzvAZtsviIuhLAVPTu7sb+He14nHaeObKXpoCH/QPta25y
      iQS9ABwYaN+0TdOWC1TT1NWGmFKiPwVNp7XJj8NmoznkJRL0MhdLcvTADo6fG6U9EqCrJciH
      V6b4pafv4+Xjw3Q2BxjsbeXY6au0hn10tgR569QVBntayOQKnLs6veb9cpvcc2BRHepqBCiF
      yegyQ72tjE4v0N4UoKDpfPKB3fg8DvYPtBP2u2mP+PG6HbzxwWXevzBGOlvg9ROX6W4L8amH
      hmiPBOjvaKIl5OPC6My69zOsKFBNU1cCcDvtd31NMp2juzXEtakFWkJeJmaXmJxbQjcEC8sp
      mgIeMrkCQkBnc4jDe3pIpLPk8hrZXIHZhQTxVJZUJsfVySiGsX4Ddzls5fp4FhWgrvYD/K/v
      vsU3/+4Ns824g3/9/JP8xhePmm2GxRrU1RxgsKcFCagVRUsS9Hc0rfq7+aUU71+a5tp0jKlo
      gqVUDiEEHqeN1pCXgY4Q+/qa2dkZtvYcV5C6EsDu3lZkWa6ZJDSn3ca+HR9FkDK5Au9fnOIH
      P7/I8PgC2pprFnO8fAIkoLPZz6P7u/nMAwO0N1m7zcpNXQmgsznIjs4mLo/Pm20KAH3tYdoj
      ATTd4Ni5cb7z+nkuTy6W/H4BTMzH+dufnuPH747whaO7+YUju/G67j7XsSiNupoEAzxzZJ/Z
      Jtzic0f3s5jI8AffeZv/9jc/31Dj/zjLqRx/9U9n+N0/+ycujlt7DcpF/Qngkb0EvE6zzcDn
      drC7r4Pf/9brvHZyFP0u0aJSGZtd5j/875/y5pnrVqJdGag7AXS1hHjmEfNHgUNDvfz5S6e3
      1OuvRTyd439++23eOH297NduNOpOALIs8dXPP0LY7zbNBqfdxmIGpqKJit0jr+n88fff49KE
      5Q5thboTAEBnS5B/+ZXHTbm3IssEQ2GW04WK3yuZyfNH3z1OKmP+BqDtSl0KAOAXnzrEc4/u
      p9oR9O72ZuzO6o0+I5Mx/u8r1s6zzVK3ArCpCv/u1z/D4b09Vbvng3t76e1qr/pC3EvvjTCz
      aBXk2gx1KwCAgNfFH/7OV7h3V2fF7/XQvl5+/QuPMjZfOb9/LTI5jR8eu2RFhTZBXQsAIORz
      86dff57PHa2MO6QqMl964h7+8He+wrvD0+us7laWY+fGSVhzgQ2zLQUghNjQn4DXxX/+zef4
      j//ic/g95VsjiAQ8/P7XnuX3/vkzuJx23h1euf1xsCvM1549xGcfGMDl2NjCe0+Lv2TRzsZS
      XLYiQhum5lMhhBAYAnK6IKMZpAsGqbxOThfkb/zRDIEuxK1KcLIkYVNAlWXsMrhtCg5F4tEH
      9vPgwZ389YvHefHnZ4kupTZsjwSE/G6efnCI3/rK47d2jY1MLpJIr+yBL00s0uR38/6lKXwu
      B48d6OXSeBSbqtAUcLOwnCYScBNdTrOjI8TxC5P0tARQZIlEJk93S4D9/c0cvzDJUE+EoNdJ
      Ip0jns5zauSjvQiGEJwbnef+wY5NPedS0A1BQTco3Hjmmm6smO8osoQqS9gUGYcqo8i1nchX
      kwIQQpDVBNGMxlJWJ5HXyWkGhRK9C12IG6+9sRsr89GuLFmCI594iH337uX4yYucOHuFicm5
      uybQ2W0Ku7pb+Owje3n6wSG6WoJ3ZGmWsuB1eHc7HqeNntYAsizx3vAUB3e0cnF8gaDXwTvn
      J9jb14zbYeP1U6Mc2dfN3FIKWZZwOWzkCzqXJhZIpPN0RnxIEneUf7w2s4QQoizZo7ohSOd1
      ZuM5oqk8c/Ec8axGTjPIawYF3SCvr5xzqLKEqkjYFRmnTcbrUGny2GkLOAi7bUS89prKbq0Z
      ARhCkNUMZlMa82mNeE6nTNkDH7sPZDSB3ePlsUfv58gj92JoGjPTcyRiS+TSGRLJ4gkyXreT
      jubi7q99O9rxuZ1r7h+OLq196kyuoIOAifkEg11hllM5dEOQyhZYTmVZSmYJep08eW8fJ0dm
      cNpVdEOQLWhouoFNUfA4bSQzebI5jUyuQCavrcj7noomMIRA2UQDM4QgndOZimcZjaa5vpAh
      ldfRDbGhqJZmFEeHbMEgnoW5RJ6r0eKzUSRw2BS6Qk66Qy52RNx4Haqpo4TpG2LyusFCWmMy
      WWA5q7NKp1JVvHaZFrdKl9+OUy19ivTN773LC+9crqBld6ct5OHP/80voCql253KaYzFMlya
      TTERy5Kp4h5mmyLR6ncw1Oqlr8lN0F393XOmjABCCDQDJhN5xuN5MlrthO+SeYNkPs94vECb
      V6XTZ8dnl+86bMs1MKzntdJ8REMI4hmNU+PLXJhJks7rpmwiKuiCiViWiVgWhyqzq8XDnjYv
      XSFX1UaFqgsgpxtMJQqMx/Nka6jhf5yCIRiPF5iIF2j1qPSHHHhtawtBUcwXgN9tZz0dGkIw
      G89xajzO8GyybBmq5SCnGXw4leDcVIKukJMH+0J0h12oFRZC1QQghGA6WeDqUp50qbPZGkAA
      MymNaEajy2enL2jHvoqL0Vmm3VruG5vo07mN5xL5PQ6kNQKn8azG21cWGZ5NUjDbz1wHAYzH
      skwtTdMRdPJwf4jepsqlllRcAEIIUgWD4YUsi5ntWyNHM2B0Oc9UssDuJietHvUOt6ez2b/h
      a9pVhSP7u8nkCozOLHHvQBuKIhH0Onnhncssp3Ibul5fW3DFCJAt6Lx3fYkPxpZruuF/HF0U
      hTAem2aw1cNjO5sIVWCOUFEBGEIwHs8zupQnt40e/nrkdcHZuQxRr8qusPPWRHlPbzOKLG3I
      rXDaVdwOlb7WABPzcV754CptYS+6ITbc+AH297XcctGEEIwuZHjz8gLzye29QnxpNsX4YoYj
      A2EOdPg2NMm/GxVZCRaiuGh1ejbDxYVc3TT+25lOarw3lWIxoyGEwGlT2NMT2dA1bKqMXVVI
      ZvJ4XHY+/cAANlXmyL4u2kIeeloCJV8r6HEw2F2sQJHTDH52ZZHvn5re9o3/JpmCwWvDUf7x
      zCyJrFa261YkDBrLapyfz5LaRr7+ZpElGAw76fIXF6/++98eK8t1IwE3hiFYTGRKev3jB3v4
      +vNHiWc1Xr4QZSxW2vu2IwGXytN7mukNu7a8qFbWEUAIwUyywMmZdEM0figurF1cyDIczXL/
      YAedkfJMhqPL6ZIbvyxLPPvQLiaXc3z7xFRdN36A5YzG90/NcGJseculJ8smACEE15bynJvP
      UGI4um4QwESiwLWEznNHdq8biqwEhwc7UFxuvntymmRu+wYaNoJmCN64tMBPLy6UvP6xGmUR
      gBCCq0t5RmI501dyzWQurdHa3c6uro3NBbaCz23n8MEdvDocRauhuH41EMDJ8WVeOj9HYZNp
      6FsWgCEEI7EcV2Ibj1rUI0kNnnr8HtxVKF4lSxL79vQzEis0XOO/nUuzKX50dpbsJtI4tiQA
      cVuY0+Ij3F43n33yEM4KV4Ye2NGJNxSsSNLgduPKfJqfnJ8nv8GRYNMCEEIwk9IYWczVTDHa
      WqK3q5nnnjpUkTKGqiKzZ1cX3T0dUPVt/7XL5bkUPxtZvGvJ+tvZdBg0ltU4OZ2mhtN5agBB
      bjnOP752ivG5eFmu6HXaePS+nQhvgBo6D7BmkICjO8M81BcsKUS6KQHkdIN3J1M1lcVZq8gS
      dLvgpZ9f4OX3r2zaV5ck2NMT4Zc/eZCTs7mGifZsBlWWeO5AKztbPHd97YYFoBuCM3MZ5tPl
      W42rd2yyxMOdHq5PL/L3b57n3LV5YslsSe+1qwpDPRG+eHQ39w918r2T00wslfbeRsZtV3j+
      cAdhz/ou6IYEUJz0FhhesL6AjdLsVrmn1YVEcZHrzNU5fv7hOFPRONOLyVuH6dlUGb/bQX97
      kIM7Wrl/sJ2elgCqInPsaox3rsasOVeJdIecfPlQO7Z1coc2JIBUQeediVRDx/q3wlCTk26/
      7ZZvagiBrhvF7Y95DUMI3A4bsiShKBKK/NEXN7aY4R9OTtdUDv924NGBMA/vCK35+5KzQQ0h
      GI5mrca/Ba7GckTcKm5bUQCyJCGrCjaKmaFrkSno/PRi1Gr8m+CdazF2tXpoWsMVKikMKoRg
      NqVt63z+WiBvCC4tZDdUwc0QglPj8brJ6qw2miF4bTi6ZsGykgSgGXAlZsX7y0E0oxHLlt6R
      xFIFTowtVdCi+mcsluFKdPWqHSUJYDKxvbYx1jKGKLpCeomjwLujS2StZ78lhICfjSyuGoK+
      qwDyusH1ZWv4LSeLWZ1YCe7kXCLH8Ez1i+3WI7F0gVPjyyt+flcBTCcLdbmjy2yuLq2fPCiE
      4P3rS1bQoYycGl9ekTq9rgAKumAiXvmTThqRpaxObJ2tffPJPJfnNl671GJtljIal+buPEdh
      XQEsZrSG2dllBhPx1V1LIQSXZ1PbqorDduHDqcQdEaE1BSCEYDJp9f6VZDGjk11lN5NmCE5N
      rPRXLbbO5FKW6G0h5TUFkNUEUSvfp6Lk9OIe6o8ztpghY428FUGI4ihwkzUFMFeFUw4tYD6t
      rVgYG56xzvuqJJfmUrfcoFUFYAjBTNLq/atBLKvfUWf/ZrVmi8qRyeuMLhSf8aoCuHkai0V1
      iGY+6myml3OkrVz/iiIoupmwhgDiH+uVLCrLzbmWEILLcykr5aQKjMcy5DVjZTaoEIKFjOX+
      VJPlXPEklmL5cmuvRTVYTBeIZ7VVBAAkrQhEVSnognTBQEIQszqfqqAbgrlEbqUADAFxywet
      KrqAtGaQzRasnP8qMp/IrxRApmBYdWZMIJHTWYhbxcWqyWw8t3ISnMhbvb8ZJPMGiylr7aWa
      xNKFlQKw8v7NI2YtPlaVRE5bKQAr9dkcdCFYzlgCqDYrBWAtgJlCQRcl7xKzKB8rBGAtgJlD
      pqBvqKalRXlYIQCzqx1mUkmEEKRTSXRt8zHxxblZlhbmy2hZZckWDNN3f2mFPLNjI6TisVs/
      E4ZBPrP6hvJ6YIUAKnBk2Ia4eOYDdF3jwsn3SCY2nxP//luvUMivvuFk+PT7m75updAMYeqz
      F0Jw8cRbLM1Ocf7tV0knlpm4fA6tkGdi5JxpdlWaO9YBdCEw2w2dn57khb/+FovzM9hsNkKR
      VuamJwhHWnj71RfR8nl8oTD77n+YK+fOMDNxnWef/3Ve/t7fgBD84tf+FbH5WUY+PE1rZw+v
      fv/b2Ox2Dh15gtPvvElbdx+n3n6DdCJBdGaSZCLOvY88zum336K9p48Hn/wMslyRwzNrGkPX
      QAgGDz/G1Mh5Lp14i+sXTnH/p77IlVNvc/38SQ4+/gwnX/sBQgj2PvxJRk4eY/+jn8HudHHq
      9R/R3NlPNp1g+uow9z/9ZaJT12lq6yafy3D2rZfo338YRbVx5cxxBg4+xPzkKMIweOS5f4ai
      VvYshbVQvvGNb3zj5n9kSWIsnjf1jK/EUoxHP/t5QEKSJGw2O3NT4wQjzfTt2oPHH+D+xz7J
      0sIcseg8mlagub2T5vZOuvp34g+EaGptR1Zkmju6yKQSLMzNgARHP/15+gb3YOg6Bx48yuzE
      OA8+8Wmmr1/F7fXxyKee3fKpg5tF1w0W41kTE+EkZkYvEmxuZ2b0El2DB3B6vHTtOoBqd9Cx
      Y4jU8iKL02O09e/G6fHR3j9EpLOXhRsNvX3HEDOjl1BUG4rNRiGXQVIUFFXF7nSTScWJTl6n
      rXcX3mAT3kCYZGye5u4BbA6nKZ+65rq6lo4uZEmmrauHvsG9XP7wFDabnUA4gj8UprWrB4fT
      RXN7F/5QmI7eHYQiLURaOwi3tGGzOwBo7eol2NSMrusM3XuYQ0ef4J1Xf8zYyEXcXh+XznxA
      S0cXJ958ld0H76N7YNDUz232MReyLNO/7zBn3noJtz9IINJGNpVgYXqMYHMbnkCI1t6dtPQM
      oBXy+ELNeALFmpstPQPMT44yPnwabyCMLxQh0tGLJMkszozj8YfIZzMEm9vZf/RpkvEYNrsD
      rZDH6fFjd7pM+9wriuO+PZEkkbdCodVGRXB2dMHaCF9lVowAdsXsvqgxsSsSsknuVyOzigBq
      zitqCNx2BVW2BFBtVrR2hzUCmIIsSbjtitlmNBwrBOC2WSOAWYTc5oQCGxWXTV4pAI/dEoAZ
      OFXprudZWZSXoNu2ckOM16YggbUxu8p47QqyzxJANWn1O1aOAIoMHssNqiqyBD6HQovPYbYp
      DUWz175SABLFL8OiethkCY9Nxm1XCLpKPrbNYguoskRn0LWKACSJoNMSQDXxO4ohUJtS/FIs
      Kk/ApeJzKKunQoSdCqrlBVWNZnex15ckid4mF9ZyQOXpCDpx2NYQgNsmE3RaQ3E1kKWPBAAw
      0OzBZz37iiJLsL/DV/z3ai+QJIkWt/UlVIMml3pH+olDlekLu020qP7xOVVa/cWAw5qOTotH
      tYbiKtDmta1Iwd7d5jXJmsZgf4cP9caejzUFYFdk2r3WymQlcakSTa6VAYfukJOwtSpcEVRZ
      Yk+b79b/153qtnmsL6GStHhsqyYfSpJ0y0e1KC/dIRfe2+ZY6wog6FQIWSHRiiBL0Olbu4MZ
      avfisdZjyooswaEe/x1Zt+sKQJEluvzW8nwliLhUvOtkf/qdNva1W6NAOWn1O+j9WIDhrtH+
      Vo9qpUaUGQnoD969Y7mvJ4DTevZl46H+EMrHIjt3fbqyJLEzbOWolJM2r4q/BPfG61C5tytQ
      BYvqn86gk/6mleHlkrqXiEslaPmjZUGVoMdvL7n6xL3dfmthbIuossQjO1b2/lCiABS5OApY
      6wJbp8tvL6n3v4nHrnB0IGR61YjtzJ52Lz3h1XOsSnYwQ06FDmtdYEu4bTJ9wdJ7fyiGRIfa
      fGt+gRbr43UoPLIjvGbBgZIFIN2YC7hUqy/aDBKwM+TAtolhVJUlPrWnGYeVobghFAke3RnG
      v44LuaEnaldkdjc5LVdoE3T77bR61E1Xngu6VB7f1WS5QhtgqM13x6rvamy4S2l2q3RbawMb
      wmeXGQg5tlR28ebq8D5rhbgkmjw2PjHYtOrE93Y2LABJktgZclhRoRKxKxL7ml3YylBuRpEl
      PjkUodXaO7wuLpvM5w60llRmZlNOpSJL7G9x4rTmA+siSzDU5NxQ1Odu2BSZZw+04rU6oFVR
      ZYknd0do9pbWSWx6VuVSZQ62uKxSimsgATuCDlo95Y/hh902njvQistaJb4DCXhisIk9bd6S
      3c1NP8Hi3mGV/c3WpHg1egL2DYU8C5pBrqCXdFC2JEl0hVw8u7/VigzdxgN9Qe7p8m8szPzx
      6tAbRQjBTErj/HzG9CN+aoVOn409Eeet2LMQgoJukMwUmIqlGY8mmY9niCayJDMFEtnCjYNJ
      BBISDpuCw6YQ9NjpCHmI+J10hN10hDw47QrKjc0cQgiuRtO8+OFcQx9uKFFs/I8OhJE32Btv
      WQA3mUkWONfgIpAoNv6hG40/mS1wdSbO6esLXJ9PMB1Ll9TDr4XTptDX4mOgzc/+7jCdTR7s
      qsL1xTQ/PDNLtgHPeFZliQf6ghwdCG/q/WUTgBCChYzO2bkMhQY97XBnyEGXT+XKTJx3L89x
      cWqJpVSOSjwOmyLTHHByqD/Cw4Ot5HR48cM54tnNHyy43bApEp/Y1cTBLv+mS8uXTQA3Wc7p
      nJvLkGyg3kiVodOjEl2I89rZSSYXU1W+v8T9A83c29/MhfkMU8u5qt7fDHwOhU/vbaE/srUC
      AmUXAECmYHA+mmEho5f70jWHiiC1nODMlTnGF5Km2mJXZYY6Q/j8XuZSWt3Wd+0Nu3hqd4Sm
      EkOd61ERAQDohuD6cp6rS5VxAczGMATLiTQXRqaYXUzVVGOzKTJer4tQyF9XJ17aFIlD3QGO
      DoTvusJbKhUTABTnBfNpjUuLOdJ15BJpms7Fa7OMjM1vaVJbaWyqQqQpgMez/TNJ2wMOjg6E
      6Q27ynqSZ0UFcJO8bjC6lGc8nt/WUSIJyGVznLwwwWQ0YbY5JSFJsLOzCa/PQyK3/VxSt13h
      /p4A93YHKrLmURUB3GQ5p3MtlmM+vf38U5cqkY6neOm9K2Ty268h9bX4uG+wnWuLORLbIFLk
      ssns6/DxQG8Qj6NyO+KqKgAAQwgWMzpXYlmWc7XvFtllid6AnWuTC/zg+NVtveDUHnTzS4/u
      ZDkv+GBsmXQNCtlpk9nX7uNgp5+wZ2XVvHJTdQHcRAhBLKszFs8TTWs1NVGWKPZA3X47bW6F
      l09P8KMT1802qyz4XTZ+8zP76GvxcXU+zftjS8zFc+RN9E1lCZq8doZavRzs8uOyVS/RzzQB
      3EQIQTxvMJssMJMqkNXMM0eRisVqu/x2gk4FWYIXT4zxwgfXMfcplRe/y85vP7uPnogPwxBE
      U3kuz6YYmU8RTear5p4GXSq9TW4GWz20+53YTchrMl0ANxFCoIviPGEuVSCa1sjpoqIjg0Qx
      tOa3K7R5VZrcKnZZQpIkhBC8fm6K7xy7UlOjU7kIeuz81mf30xMpFuIVQqAbgmROZ2wxw9hi
      mqnlHNmCXpbRQZUlnDaZJo+d/oibzqCTiNeOeuN5m0XNCODjaIYglTdYymkkcgbxvE5WM9iK
      Cy4DdlXCa1MIOhUCTgWfXV61PucHV+f5i1eHazrMuVXagm5+9/MH8btXX1DSDMFypsBCMk88
      q7GULrCUKZApGBQ0A90Q6DeEI0sSkgSqImNXimceu+wKYbedoEsl7Cn+7aiie1MKNSuA27k5
      OuiGIKcXhZHRDPK6QcGAgl78Im6iSBKyXJzAOhQZhyrhUmXcNhlVZt1eRwjBVCzNH71wluV0
      vlof0TQO9IT5jaf3YFdLa5hCCDRDYIji6CxE8Wc3n6csFTdMKbK06fycarItBFBNMnmNP/jh
      Gcaj5qY1VJNn7uvm84f7tkWDLTf1s05eJl44cb2hGj/AK6cnGZ3bHgt75cYSwG2cH1/kjXPT
      ZptRdQq6wf978zKpXMFsU6qOJYAbZPIaPzpxnYK+fRe6tsLUYoq3L86abUbVsQRwg+OX5rg6
      25huAIAAfnJynPnljNmmVBVLAEAyW+CVMxNmm2E6iWyBV8421nNoeAEIIXhvZI5oImu2KTXB
      8UtzLDTQs2h4AWTyOq9/OGW2GTVDtqDz2tlJs82oGg0vgOHJGHPxxvJ778bp0QWS2caICDW8
      AI4Nz9RVols5iCayXJpaMtuMqtDQAkhk8gxPNsYXvVGKHUP99wwNLYCz1xfR6jjZbSucn4iR
      K9Tehply09ACODUaNduEmsUQcGU2brYZFadhBZDOaVUvYLXdOHm1/juIhhXA7HKa5VT9pztv
      hYnFVN3PAxpXAEsZy/+/CwuJbN3viWhIAQghGGuwlOfNkMppdb9C3qACgLkGS/raDIYhWIhb
      Aqg7dCGI1/nQXi4WkvVdabohBWAYou5923JR7ykRjSkAIcg2wCJPOaj3SFlDCkAIyrbK2ex3
      8qUH+3n2vh68TtuK34e9DloCK6szu+0qgVXKkThtCvu6QwB0N3k4OtSGelsp8PaQm9aAi84m
      T1nsvxu6MOo6FFq5qqMNwnw8ywfX5knlNCTgyO5WltN54uk8/a1+ZpbS9ER8ZPMaF6eW2NsV
      QjMEl6aWkCSJe3qbcDkUphbT9ES8nB1bBECWJPZ0hUjlNHqavXQ1ebk4uYTfZWc5nUORJHa2
      +4klcyiyzI5WP4uJLA6bgt9t58TVebJlqP1Z0AyEKFaZrkcsAZSR3hYfAbcdIcCuKhy7OEPI
      4yCRLuByqLgdKucnYvhddlz2YpEoQwiOX55jZ1uAJp+TsNcBFN20kZllphbT7O4MYldlelt8
      N+YvOZDA57STzevIkkQ2r3NtLsGXH+5nPp7FZVPLIgBFluu28UODukASoJbxgO9sXiev6Uwu
      JMkUdFK5AvPxDEd2t+Fx2MgUNNI5jUxeJ1fQSec0snm92JCBh3a1IFFceMrkdZI3ypenczq6
      EOQ1nXReZymVI57OkysYZHIaTpvCrvYAeU0nGs9Q0A1G5xLkNb1sm/vtqmxq6cJK05CFsXIF
      nd/72/esSFAJPLanjV95fNBsMypGY44AErgreOhCPbFW3dB6oSEFoMgSvlUiNtTA0f0AAAM+
      SURBVBYrCXudZptQURpSALIk0bxKaNLiTmSJVUO49URDCkCSJNpDWztguRFwO1RCHofZZlSU
      hhQAQF+zjzIdNVu3eJ12Au76dhUbVgAtQVfdT/C2SnfEg63EcwO2Kw0rAL/LTmvQcoPWY6gz
      ZLYJFadhBQDcyrmxWIkE7Gr3m21GxWloARzqj5htQs3SHfES8dd3BAgaXADNftetUxIt7uSB
      ncX0jHqnoQUA8PBgq9km1Bxep8p9OyJ1nQN0k4YXwL39Tavm5Tcy+7rDt7JS652GF0DY67RG
      gdtQFYkn93c2RO8PlgAAeGxPO3bVehQAuzuC9LX4zDajaljfOhDxO3lqf6fZZpiOTZH53P29
      ZptRVSwB3OAT+zoIehp7LnB4oJne5sbp/cESwC2CHjvP3tdT19v/1iPosfPMfT0oDZYgZQng
      BpIkcWR3G4PtQbNNqTqSBL9wuK/uU59XwxLAbaiKzK88vgtPg+0WO9Qf4cFdLWabYQqWAD5G
      S8DFrz6+q6yb5muZtqCbXzoygKo0ZlNozE99F+7pi/DUgfqPCtlVmV/9xC6Cdb7pZT0sAayC
      LEt88cF+Hqpjt8ChyvzaE7vZ2RYw2xRTsQSwBrIk8ctHd7K3q/5Spm2KzFceGbCyYbEEsC5u
      h8pXPznE7o76iQzZVJkvP9zP0T1tyA0W8lyNhiyMtVGyeY2/euMSJ69G2c4Py2FTeP7oAA8N
      tiI36oLHx7AEUCJ5TecH747y6tlJs03ZFD6njV97cjf7ukMNk+hWCpYANoC4Ucj2e8evbauy
      ioMdAZ4/upOOcHVKqm8nLAFsgqnFFN/66UXGa/ygPUWWeGxPO196qB+Hrb6rO2wWSwCbJK/p
      vP7hFK+cmSCeqb1jhHqavXzpwX52dwYtf38dLAFskfl4hhdPjPHuyBx6DZw73ORz8sS+dh7b
      047T3lgpHZvBEkAZ0A3B1GKKFz8Y49z4InmtPLX5N0LY6+AT+zp4dKgNj1X4t2QsAZSZiYUk
      J69FeW9knvl4hko+XYdNYUern/v6IzywswWn3fLzN4olgAqRyhW4Npvg5LUoFyeXynbiuiJL
      7Gj1c09fE3u7QrQEXA2byFYO/j/VdHIOpErU/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Painel 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Planilha 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Crashes ' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
